(function(u,l,T,s,v,w,m,h){"use strict";const C={apiKey:"",serverUrl:""},g=()=>({...C,...w.storage}),S=o=>{Object.assign(w.storage,o)},F=o=>{const t=g();t.apiKey=o,S(t)},U=o=>{const t=g();t.serverUrl=o,S(t)},f=()=>g().apiKey,y=()=>g().serverUrl,_=()=>{const o=g();return o.apiKey.trim()!==""&&o.serverUrl.trim()!==""};function E(){return"10000000-1000-4000-8000-100000000000".replace(/[018]/g,o=>(+o^crypto.getRandomValues(new Uint8Array(1))[0]&15>>+o/4).toString(16))}v.findByProps("openLazy","hideActionSheet");const A=v.findByProps("ActionSheet")?.ActionSheet,b=v.findByProps("ActionSheetRow")?.ActionSheetRow;let I;const $=()=>{const o=f(),t=y();if(!o||!t){l.showToast("Immich not configured!",s.getAssetIDByName("ic_close_16px"));return}fetch(`${t}/api/albums`,{method:"GET",headers:{"X-API-KEY":o,Accept:"application/json"}}).then(r=>{r.status===200||r.status===401?l.showToast("\u2705 Immich connection successful!",s.getAssetIDByName("ic_check")):l.showToast(`\u274C Connection failed: ${r.status}`,s.getAssetIDByName("ic_close_16px"))}).catch(r=>{l.showToast(`\u274C Cannot reach server: ${r.message}`,s.getAssetIDByName("ic_close_16px"))})},R=o=>`/tmp/immich_cache_${Date.now()}_${E()}_${o}`,k=(o,t)=>new Promise((r,a)=>{const c=new FileReader;c.onload=function(e){try{const i=e.target?.result;if(!i){a(new Error("Failed to read blob data"));return}const n=new Uint8Array(i);typeof window<"u"?(window.__immichCache=window.__immichCache||{},window.__immichCache[t]=n):(globalThis.__immichCache=globalThis.__immichCache||{},globalThis.__immichCache[t]=n),r()}catch(i){a(i)}},c.onerror=function(){a(new Error("FileReader failed to read blob"))},c.readAsArrayBuffer(o)}),D=(o,t)=>{const r=(globalThis.__immichCache||(typeof window<"u"?window.__immichCache:{}))[o];if(!r)throw new Error(`Cache file not found: ${o}`);return new Blob([r],{type:t})},P=o=>{try{const t=globalThis.__immichCache||(typeof window<"u"?window.__immichCache:{});t[o]&&(delete t[o],console.log("[ImmichSave] Cleaned up cache file:",o))}catch(t){console.warn("[ImmichSave] Failed to cleanup cache file:",o,t)}},B=(o,t)=>{const r=f(),a=y();if(!r||!a)return l.showToast("Immich not configured! Please set API key and server URL in settings.",s.getAssetIDByName("ic_close_16px")),Promise.resolve(!1);console.log("[ImmichSave] Starting upload for:",t),console.log("[ImmichSave] File URL:",o),console.log("[ImmichSave] Server URL:",a),console.log("[ImmichSave] API Key length:",r.length);const c=R(t);return console.log("[ImmichSave] Cache path:",c),fetch(o,{method:"GET",headers:{"User-Agent":"Mozilla/5.0 (compatible; ImmichSave/1.0)"}}).then(e=>{if(console.log("[ImmichSave] File download response:",e.status,e.statusText),console.log("[ImmichSave] Content-Length:",e.headers.get("content-length")),console.log("[ImmichSave] Content-Type:",e.headers.get("content-type")),!e.ok)throw new Error(`Failed to download file: ${e.status} ${e.statusText}`);const i=e.headers.get("content-length");if(i&&parseInt(i)===0)throw new Error("Server returned empty file (Content-Length: 0)");return e.blob()}).then(e=>{if(console.log("[ImmichSave] Downloaded blob size:",e.size,"bytes"),console.log("[ImmichSave] Downloaded blob type:",e.type),e.size===0)throw new Error("Downloaded file is empty (0 bytes)");return console.log("[ImmichSave] Writing to cache..."),k(e,c).then(()=>{console.log("[ImmichSave] File cached successfully");const i=D(c,e.type);if(console.log("[ImmichSave] Verified cached file size:",i.size,"bytes"),i.size!==e.size)throw new Error(`Cache verification failed: expected ${e.size} bytes, got ${i.size} bytes`);const n=new FormData;n.append("assetData",i,t);const d=`${t.match(/\d+/g)?.join("")||""}-${i.size}-${Date.now()}`;n.append("deviceAssetId",d),n.append("deviceId","discord-mobile-v2");const p=new Date().toISOString();return n.append("fileCreatedAt",p),n.append("fileModifiedAt",p),n.append("fileSize",String(i.size)),console.log("[ImmichSave] FormData prepared with cached file"),console.log("[ImmichSave] Uploading to:",`${a}/api/assets`),fetch(`${a}/api/assets`,{method:"POST",headers:{"x-api-key":r,Accept:"application/json"},body:n})})}).then(e=>(console.log("[ImmichSave] Upload response status:",e.status,e.statusText),console.log("[ImmichSave] Upload response headers:",Object.fromEntries(e.headers.entries())),e.ok?e.text().then(i=>(console.log("[ImmichSave] Upload success response:",i),!0)):e.text().then(i=>{throw console.log("[ImmichSave] Upload error response body:",i),new Error(`Upload failed: ${e.status} - ${i}`)}))).catch(e=>{console.error("[ImmichSave] Upload error:",e),console.error("[ImmichSave] Error message:",e.message),console.error("[ImmichSave] Error type:",e.constructor.name),console.error("[ImmichSave] Error stack:",e.stack);let i="Unknown error occurred";return e.message.includes("Network request failed")?i="Cannot connect to Immich server. Check your server URL and network connection.":e.message.includes("Upload failed: 401")?i="Invalid API key. Please check your Immich API key in settings.":e.message.includes("Upload failed: 403")?i="Access denied. Check your API key permissions.":e.message.includes("Upload failed: 404")?i="Immich API endpoint not found. Check your server URL.":e.message.includes("Upload failed: 500")?i="Immich server error. Check server logs.":i=e.message||"Unknown error occurred",l.showToast(`Failed to save: ${i}`,s.getAssetIDByName("ic_close_16px")),!1}).finally(()=>{P(c)})},x=o=>{if(!_()){l.showToast("Please configure Immich settings first!",s.getAssetIDByName("ic_close_16px"));return}const t=o.attachments;if(!t||t.length===0){l.showToast("No media found in this message",s.getAssetIDByName("ic_close_16px"));return}const r=t.filter(n=>{const d=n.content_type?.startsWith("image/")||/\.(jpg|jpeg|png|gif|webp|bmp|svg)$/i.test(n.filename),p=n.content_type?.startsWith("video/")||/\.(mp4|mov|avi|mkv|webm|m4v|3gp|flv|wmv)$/i.test(n.filename);return d||p});if(r.length===0){l.showToast("No image or video attachments found",s.getAssetIDByName("ic_close_16px"));return}l.showToast(`Uploading ${r.length} file(s) to Immich...`,s.getAssetIDByName("ic_upload"));let a=0,c=0,e=0;const i=n=>B(n.url,n.filename).then(d=>{d?a++:c++,e++,r.length>1&&l.showToast(`Progress: ${e}/${r.length} files processed`,s.getAssetIDByName("ic_check")),e===r.length&&(a>0&&l.showToast(`Successfully saved ${a} file(s) to Immich!`,s.getAssetIDByName("ic_check")),c>0&&l.showToast(`Failed to save ${c} file(s)`,s.getAssetIDByName("ic_close_16px")))}).catch(d=>{c++,e++,e===r.length&&(a>0&&l.showToast(`Successfully saved ${a} file(s) to Immich!`,s.getAssetIDByName("ic_check")),c>0&&l.showToast(`Failed to save ${c} file(s)`,s.getAssetIDByName("ic_close_16px")))});r.forEach(n=>{i(n)})};var N={onLoad:()=>{A&&(I=T.before("render",A,o=>{try{const[t]=o,r=t.header?.props?.message;if(!r||!r.attachments?.some(a=>{const c=a.content_type?.startsWith("image/")||/\.(jpg|jpeg|png|gif|webp|bmp|svg)$/i.test(a.filename),e=a.content_type?.startsWith("video/")||/\.(mp4|mov|avi|mkv|webm|m4v|3gp|flv|wmv)$/i.test(a.filename);return c||e}))return;if(t.children&&Array.isArray(t.children)&&b&&!t.children.some(a=>a?.props?.label==="Save to Immich")){const a=m.React.createElement(b,{key:"save-to-immich",label:"Save to Immich",icon:s.getAssetIDByName("ic_download"),onPress:()=>{try{x(r)}catch(c){console.error("[ImmichSave] Error in Save to Immich handler:",c),l.showToast(`Failed to save: ${c.message||"Unknown error"}`,s.getAssetIDByName("ic_close_16px"))}}});t.children.unshift(a)}}catch(t){console.error("[ImmichSave] ActionSheet patch error:",t)}}))},onUnload:()=>{I&&I()},settings:()=>{const[o,t]=m.React.useState(f()),[r,a]=m.React.useState(y()),c=()=>{F(o),l.showToast("API Key saved!",s.getAssetIDByName("ic_check"))},e=()=>{U(r),l.showToast("Server URL saved!",s.getAssetIDByName("ic_check"))};return m.React.createElement(m.React.Fragment,null,m.React.createElement(h.Forms.FormSection,{title:"Immich Configuration"},m.React.createElement(h.Forms.FormText,{style:{marginBottom:10,marginLeft:10}},"Configure your Immich server connection:"),m.React.createElement(h.Forms.FormInput,{placeholder:"Enter your Immich API Key",value:o,onChange:t,secureTextEntry:!0}),m.React.createElement(h.Forms.FormRow,{label:"Save API Key",onPress:c}),m.React.createElement(h.Forms.FormInput,{placeholder:"Enter Immich Server URL (e.g., https://immich.example.com)",value:r,onChange:a}),m.React.createElement(h.Forms.FormRow,{label:"Save Server URL",onPress:e}),m.React.createElement(h.Forms.FormRow,{label:"Test Connection",onPress:$})),m.React.createElement(h.Forms.FormSection,{title:"Status"},m.React.createElement(h.Forms.FormText,{style:{marginBottom:10,marginLeft:10}},_()?"\u2705 Immich is configured and ready to use!":"\u274C Please configure Immich settings above")))}};return u.default=N,Object.defineProperty(u,"__esModule",{value:!0}),u})({},vendetta.ui.toasts,vendetta.patcher,vendetta.ui.assets,vendetta.metro,vendetta.plugin,vendetta.metro.common,vendetta.ui.components);
