(function(u,d,i,s,y,c,m,I){"use strict";const F={apiKey:"",serverUrl:""},g=()=>({...F,...y.storage}),v=a=>{Object.assign(y.storage,a)},E=a=>{const o=g();o.apiKey=a,v(o)},b=a=>{const o=g();o.serverUrl=a,v(o)},S=()=>g().apiKey,_=()=>g().serverUrl,w=()=>{const a=g();return a.apiKey.trim()!==""&&a.serverUrl.trim()!==""};let p=[];const B=()=>{d.findByStoreName("ChannelStore"),d.findByStoreName("MessageStore")},D=(a,o)=>{const n=S(),t=_();return!n||!t?(i.showToast("Immich not configured! Please set API key and server URL in settings.",s.getAssetIDByName("ic_close_16px")),Promise.resolve(!1)):fetch(a).then(e=>{if(!e.ok)throw new Error(`Failed to download image: ${e.status}`);return e.blob()}).then(e=>{const r=new FormData;return r.append("assetData",e,o),r.append("deviceAssetId",`discord_${Date.now()}_${Math.random().toString(36).substr(2,9)}`),r.append("deviceId","vendetta-discord"),r.append("fileCreatedAt",new Date().toISOString()),r.append("fileModifiedAt",new Date().toISOString()),fetch(`${t}/api/asset/upload`,{method:"POST",headers:{"X-API-KEY":n},body:r})}).then(e=>e.ok?!0:e.text().then(r=>{throw new Error(`Upload failed: ${e.status} - ${r}`)})).catch(e=>(console.error("Immich upload error:",e),i.showToast(`Upload failed: ${e.message}`,s.getAssetIDByName("ic_close_16px")),!1))},A=a=>{if(!w()){i.showToast("Please configure Immich settings first!",s.getAssetIDByName("ic_close_16px"));return}const o=a.attachments;if(!o||o.length===0){i.showToast("No images found in this message",s.getAssetIDByName("ic_close_16px"));return}const n=o.filter(l=>l.content_type?.startsWith("image/")||/\.(jpg|jpeg|png|gif|webp|bmp)$/i.test(l.filename));if(n.length===0){i.showToast("No image attachments found",s.getAssetIDByName("ic_close_16px"));return}let t=0,e=0,r=0;const h=l=>D(l.url,l.filename).then(f=>{f?t++:e++,r++,r===n.length&&(t>0&&i.showToast(`Successfully saved ${t} image(s) to Immich!`,s.getAssetIDByName("ic_check")),e>0&&i.showToast(`Failed to save ${e} image(s)`,s.getAssetIDByName("ic_close_16px")))}).catch(f=>{e++,r++,console.error("Error processing attachment:",f),r===n.length&&(t>0&&i.showToast(`Successfully saved ${t} image(s) to Immich!`,s.getAssetIDByName("ic_check")),e>0&&i.showToast(`Failed to save ${e} image(s)`,s.getAssetIDByName("ic_close_16px")))});n.forEach(l=>{h(l)})},P=a=>{try{A(a)}catch(o){console.error("Error in Immich action:",o),i.showToast("Failed to save images to Immich",s.getAssetIDByName("ic_close_16px"))}};var N={onLoad:()=>{B();const a=I.before("render",d.findByProps("MessageContent").MessageContent,n=>{try{const[t]=n,e=t.message;if(!e||!e.attachments||e.attachments.length===0||!e.attachments.some(h=>h.content_type?.startsWith("image/")||/\.(jpg|jpeg|png|gif|webp|bmp)$/i.test(h.filename)))return;const r=t.onLongPress;t.onLongPress=h=>{r&&r(h),P(e)}}catch(t){console.error("Message content patch error:",t)}});p.push(a);const o=I.before("render",d.findByProps("ActionSheet").ActionSheet,n=>{try{const[t]=n;if(t.sheetKey!=="MessageOverflow")return;const e=t.message||t.content?.props?.message;if(!e||!e.attachments||e.attachments.length===0||!e.attachments.some(r=>r.content_type?.startsWith("image/")||/\.(jpg|jpeg|png|gif|webp|bmp)$/i.test(r.filename)))return;t.options&&!t.options.some(r=>r?.label==="Save to Immich")&&t.options.unshift({label:"Save to Immich",icon:s.getAssetIDByName("ic_download"),onPress:()=>{try{A(e),t.hideActionSheet?.()}catch(r){console.error("Error saving to Immich:",r),i.showToast("Failed to save images to Immich",s.getAssetIDByName("ic_close_16px"))}}})}catch(t){console.error("ActionSheet patch error:",t)}});p.push(o)},onUnload:()=>{p.forEach(a=>{try{a()}catch(o){console.error("Error unpatching:",o)}}),p=[]},settings:()=>{const[a,o]=c.React.useState(S()),[n,t]=c.React.useState(_()),e=()=>{E(a),i.showToast("API Key saved!",s.getAssetIDByName("ic_check"))},r=()=>{b(n),i.showToast("Server URL saved!",s.getAssetIDByName("ic_check"))};return c.React.createElement(c.React.Fragment,null,c.React.createElement(m.Forms.FormSection,{title:"Immich Configuration"},c.React.createElement(m.Forms.FormText,{style:{marginBottom:10}},"Configure your Immich server connection:"),c.React.createElement(m.Forms.FormInput,{placeholder:"Enter your Immich API Key",value:a,onChange:o,secureTextEntry:!0}),c.React.createElement(m.Forms.FormRow,{label:"Save API Key",onPress:e}),c.React.createElement(m.Forms.FormInput,{placeholder:"Enter Immich Server URL (e.g., https://immich.example.com)",value:n,onChange:t}),c.React.createElement(m.Forms.FormRow,{label:"Save Server URL",onPress:r})),c.React.createElement(m.Forms.FormSection,{title:"Status"},c.React.createElement(m.Forms.FormText,{style:{marginBottom:10}},w()?"\u2705 Immich is configured and ready to use!":"\u274C Please configure Immich settings above")))}};return u.default=N,Object.defineProperty(u,"__esModule",{value:!0}),u})({},vendetta.metro,vendetta.ui.toasts,vendetta.ui.assets,vendetta.plugin,vendetta.metro.common,vendetta.ui.components,vendetta.patcher);
