(function(p,n,_,c,m,A,a,h){"use strict";const b={apiKey:"",serverUrl:""},g=()=>({...b,...A.storage}),w=s=>{Object.assign(A.storage,s)},B=s=>{const o=g();o.apiKey=s,w(o)},R=s=>{const o=g();o.serverUrl=s,w(o)},v=()=>g().apiKey,f=()=>g().serverUrl,T=()=>{const s=g();return s.apiKey.trim()!==""&&s.serverUrl.trim()!==""},D=m.findByProps("fetch")||m.findByProps("request")||m.findByProps("http"),I=m.findByProps("get","post","request"),y=m.findByProps("makeRequest")||m.findByProps("sendRequest"),E=m.findByProps("fetch","xhr")||m.findByProps("NetworkingModule");console.log("[ImmichSave] HTTP Module found:",!!I),console.log("[ImmichSave] Request Module found:",!!y),console.log("[ImmichSave] Network Module found:",!!E),m.findByProps("openLazy","hideActionSheet");const P=m.findByProps("ActionSheet")?.ActionSheet,k=m.findByProps("ActionSheetRow")?.ActionSheetRow;let S;const U=()=>{const s=v(),o=f();if(!s||!o){n.showToast("Immich not configured!",c.getAssetIDByName("ic_close_16px"));return}console.log("[ImmichSave] Testing connection to:",`${o}/api/albums`),console.log("[ImmichSave] Testing catbox domains first..."),["https://catbox.moe/user/api.php","https://litterbox.com/resources/internals/api.php","https://pomf.se/upload.php"].forEach((e,d)=>{fetch(e,{method:"GET"}).then(l=>{console.log(`[ImmichSave] Catbox test ${d+1}: SUCCESS - ${l.status}`)}).catch(l=>{console.log(`[ImmichSave] Catbox test ${d+1}: FAILED - ${l.message}`)})}),console.log("[ImmichSave] Testing our server:",`${o}/api/albums`),console.log("[ImmichSave] Skipping CSP bypass (caused crash), trying normal fetch..."),i();function i(){if(I?.get){console.log("[ImmichSave] Trying HTTPModule.get...");try{I.get(`${o}/api/albums`,{headers:{"X-API-KEY":s,"User-Agent":"Discord-Mobile/1.0"}}).then(e=>{console.log("[ImmichSave] HTTPModule SUCCESS:",e),n.showToast("\u2705 HTTPModule worked!",c.getAssetIDByName("ic_check"))}).catch(e=>{console.log("[ImmichSave] HTTPModule failed:",e),r()});return}catch(e){console.log("[ImmichSave] HTTPModule error:",e)}}r()}function r(){if(y?.makeRequest){console.log("[ImmichSave] Trying RequestModule.makeRequest...");try{y.makeRequest({url:`${o}/api/albums`,method:"GET",headers:{"X-API-KEY":s,"User-Agent":"Discord-Mobile/1.0"}}).then(e=>{console.log("[ImmichSave] RequestModule SUCCESS:",e),n.showToast("\u2705 RequestModule worked!",c.getAssetIDByName("ic_check"))}).catch(e=>{console.log("[ImmichSave] RequestModule failed:",e),t()});return}catch(e){console.log("[ImmichSave] RequestModule error:",e)}}t()}function t(){console.log("[ImmichSave] Falling back to normal fetch..."),fetch(`${o}/api/albums`,{method:"GET",headers:{"X-API-KEY":s,"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",Accept:"*/*","Accept-Language":"en-US,en;q=0.9","Cache-Control":"no-cache",Pragma:"no-cache"}}).then(e=>{console.log("[ImmichSave] Connection test response:",e.status,e.statusText),e.ok?n.showToast("\u2705 Immich connection successful!",c.getAssetIDByName("ic_check")):n.showToast(`\u274C Connection failed: ${e.status}`,c.getAssetIDByName("ic_close_16px"))}).catch(e=>{console.error("[ImmichSave] Primary connection test failed:",e),console.log("[ImmichSave] Trying simpler connection test to:",o),fetch(o,{method:"GET",mode:"no-cors"}).then(d=>{console.log("[ImmichSave] Simple test response:",d.type,d.status),n.showToast("\u2705 Server reachable (no-cors mode)",c.getAssetIDByName("ic_check"))}).catch(d=>{console.error("[ImmichSave] All connection tests failed:",d),n.showToast(`\u274C Cannot reach server: ${e.message}`,c.getAssetIDByName("ic_close_16px"))})})}},C=(s,o)=>{const i=v(),r=f();return!i||!r?(n.showToast("Immich not configured! Please set API key and server URL in settings.",c.getAssetIDByName("ic_close_16px")),Promise.resolve(!1)):fetch(s).then(t=>{if(!t.ok)throw new Error(`Failed to download file: ${t.status}`);return t.blob()}).then(t=>{const e=new FormData;return e.append("assetData",t,o),e.append("deviceAssetId",`discord_${Date.now()}_${Math.random().toString(36).substr(2,9)}`),e.append("deviceId","vendetta-discord"),e.append("fileCreatedAt",new Date().toISOString()),e.append("fileModifiedAt",new Date().toISOString()),e.append("filename",o),e.append("metadata",JSON.stringify([])),console.log("[ImmichSave] Uploading to Immich:",`${r}/api/asset/upload`),console.log("[ImmichSave] API Key length:",i.length),console.log("[ImmichSave] FormData prepared with keys:",["assetData","deviceAssetId","deviceId","fileCreatedAt","fileModifiedAt","filename","metadata"]),console.log("[ImmichSave] Blob size:",t.size,"bytes"),console.log("[ImmichSave] Using Discord's native fetch for upload..."),(D?.fetch||fetch)(`${r}/api/asset/upload`,{method:"POST",headers:{"X-API-KEY":i,"User-Agent":"Discord-Mobile/1.0"},body:e})}).then(t=>t.ok?!0:t.text().then(e=>{throw new Error(`Upload failed: ${t.status} - ${e}`)})).catch(t=>{console.error("[ImmichSave] Upload error:",t),console.error("[ImmichSave] Error type:",t.constructor.name),console.error("[ImmichSave] Error stack:",t.stack);let e="Unknown error occurred";return t.message.includes("Network request failed")?e="Cannot connect to Immich server. Check your server URL and network connection.":t.message.includes("Upload failed: 401")?e="Invalid API key. Please check your Immich API key in settings.":t.message.includes("Upload failed: 403")?e="Access denied. Check your API key permissions.":t.message.includes("Upload failed: 404")?e="Immich API endpoint not found. Check your server URL.":t.message.includes("Upload failed: 500")?e="Immich server error. Check server logs.":e=t.message||"Unknown error occurred",n.showToast(`Failed to save: ${e}`,c.getAssetIDByName("ic_close_16px")),!1})},$=s=>{if(!T()){n.showToast("Please configure Immich settings first!",c.getAssetIDByName("ic_close_16px"));return}const o=s.attachments;if(!o||o.length===0){n.showToast("No media found in this message",c.getAssetIDByName("ic_close_16px"));return}const i=o.filter(l=>{const u=l.content_type?.startsWith("image/")||/\.(jpg|jpeg|png|gif|webp|bmp|svg)$/i.test(l.filename),F=l.content_type?.startsWith("video/")||/\.(mp4|mov|avi|mkv|webm|m4v|3gp|flv|wmv)$/i.test(l.filename);return u||F});if(i.length===0){n.showToast("No image or video attachments found",c.getAssetIDByName("ic_close_16px"));return}n.showToast(`Uploading ${i.length} file(s) to Immich...`,c.getAssetIDByName("ic_upload"));let r=0,t=0,e=0;const d=l=>C(l.url,l.filename).then(u=>{u?r++:t++,e++,i.length>1&&n.showToast(`Progress: ${e}/${i.length} files processed`,c.getAssetIDByName("ic_check")),e===i.length&&(r>0&&n.showToast(`Successfully saved ${r} file(s) to Immich!`,c.getAssetIDByName("ic_check")),t>0&&n.showToast(`Failed to save ${t} file(s)`,c.getAssetIDByName("ic_close_16px")))}).catch(u=>{t++,e++,e===i.length&&(r>0&&n.showToast(`Successfully saved ${r} file(s) to Immich!`,c.getAssetIDByName("ic_check")),t>0&&n.showToast(`Failed to save ${t} file(s)`,c.getAssetIDByName("ic_close_16px")))});i.forEach(l=>{d(l)})};var N={onLoad:()=>{P&&(S=_.before("render",P,s=>{try{const[o]=s,i=o.header?.props?.message;if(!i||!i.attachments?.some(r=>{const t=r.content_type?.startsWith("image/")||/\.(jpg|jpeg|png|gif|webp|bmp|svg)$/i.test(r.filename),e=r.content_type?.startsWith("video/")||/\.(mp4|mov|avi|mkv|webm|m4v|3gp|flv|wmv)$/i.test(r.filename);return t||e}))return;if(o.children&&Array.isArray(o.children)&&k&&!o.children.some(r=>r?.props?.label==="Save to Immich")){const r=a.React.createElement(k,{key:"save-to-immich",label:"Save to Immich",icon:c.getAssetIDByName("ic_download"),onPress:()=>{try{$(i)}catch(t){console.error("[ImmichSave] Error in Save to Immich handler:",t),n.showToast(`Failed to save: ${t.message||"Unknown error"}`,c.getAssetIDByName("ic_close_16px"))}}});o.children.unshift(r)}}catch(o){console.error("[ImmichSave] ActionSheet patch error:",o)}}))},onUnload:()=>{S&&S()},settings:()=>{const[s,o]=a.React.useState(v()),[i,r]=a.React.useState(f()),t=()=>{B(s),n.showToast("API Key saved!",c.getAssetIDByName("ic_check"))},e=()=>{R(i),n.showToast("Server URL saved!",c.getAssetIDByName("ic_check"))};return a.React.createElement(a.React.Fragment,null,a.React.createElement(h.Forms.FormSection,{title:"Immich Configuration"},a.React.createElement(h.Forms.FormText,{style:{marginBottom:10,marginLeft:10}},"Configure your Immich server connection:"),a.React.createElement(h.Forms.FormInput,{placeholder:"Enter your Immich API Key",value:s,onChange:o,secureTextEntry:!0}),a.React.createElement(h.Forms.FormRow,{label:"Save API Key",onPress:t}),a.React.createElement(h.Forms.FormInput,{placeholder:"Enter Immich Server URL (e.g., https://immich.example.com)",value:i,onChange:r}),a.React.createElement(h.Forms.FormRow,{label:"Save Server URL",onPress:e}),a.React.createElement(h.Forms.FormRow,{label:"Test Connection",onPress:U})),a.React.createElement(h.Forms.FormSection,{title:"Status"},a.React.createElement(h.Forms.FormText,{style:{marginBottom:10,marginLeft:10}},T()?"\u2705 Immich is configured and ready to use!":"\u274C Please configure Immich settings above")))}};return p.default=N,Object.defineProperty(p,"__esModule",{value:!0}),p})({},vendetta.ui.toasts,vendetta.patcher,vendetta.ui.assets,vendetta.metro,vendetta.plugin,vendetta.metro.common,vendetta.ui.components);
