(function(p,c,_,a,h,I,n,l){"use strict";const b={apiKey:"",serverUrl:""},d=()=>({...b,...I.storage}),y=i=>{Object.assign(I.storage,i)},T=i=>{const t=d();t.apiKey=i,y(t)},D=i=>{const t=d();t.serverUrl=i,y(t)},u=()=>d().apiKey,v=()=>d().serverUrl,S=()=>{const i=d();return i.apiKey.trim()!==""&&i.serverUrl.trim()!==""},k=h.findByProps("fetch")||h.findByProps("request")||h.findByProps("http");h.findByProps("openLazy","hideActionSheet");const A=h.findByProps("ActionSheet")?.ActionSheet,w=h.findByProps("ActionSheetRow")?.ActionSheetRow;let f;const E=()=>{const i=u(),t=v();if(!i||!t){c.showToast("Immich not configured!",a.getAssetIDByName("ic_close_16px"));return}console.log("[ImmichSave] Testing connection to:",`${t}/api/albums`),console.log("[ImmichSave] Testing catbox domains first..."),["https://catbox.moe/user/api.php","https://litterbox.com/resources/internals/api.php","https://pomf.se/upload.php"].forEach((o,r)=>{fetch(o,{method:"GET"}).then(e=>{console.log(`[ImmichSave] Catbox test ${r+1}: SUCCESS - ${e.status}`)}).catch(e=>{console.log(`[ImmichSave] Catbox test ${r+1}: FAILED - ${e.message}`)})}),console.log("[ImmichSave] Testing our server:",`${t}/api/albums`),fetch(`${t}/api/albums`,{method:"GET",headers:{"X-API-KEY":i,"User-Agent":"Discord-Mobile/1.0",Accept:"application/json"}}).then(o=>{console.log("[ImmichSave] Connection test response:",o.status,o.statusText),o.ok?c.showToast("\u2705 Immich connection successful!",a.getAssetIDByName("ic_check")):c.showToast(`\u274C Connection failed: ${o.status}`,a.getAssetIDByName("ic_close_16px"))}).catch(o=>{console.error("[ImmichSave] Primary connection test failed:",o),console.log("[ImmichSave] Trying simpler connection test to:",t),fetch(t,{method:"GET",mode:"no-cors"}).then(r=>{console.log("[ImmichSave] Simple test response:",r.type,r.status),c.showToast("\u2705 Server reachable (no-cors mode)",a.getAssetIDByName("ic_check"))}).catch(r=>{console.error("[ImmichSave] All connection tests failed:",r),c.showToast(`\u274C Cannot reach server: ${o.message}`,a.getAssetIDByName("ic_close_16px"))})})},P=(i,t)=>{const o=u(),r=v();return!o||!r?(c.showToast("Immich not configured! Please set API key and server URL in settings.",a.getAssetIDByName("ic_close_16px")),Promise.resolve(!1)):fetch(i).then(e=>{if(!e.ok)throw new Error(`Failed to download file: ${e.status}`);return e.blob()}).then(e=>{const s=new FormData;return s.append("assetData",e,t),s.append("deviceAssetId",`discord_${Date.now()}_${Math.random().toString(36).substr(2,9)}`),s.append("deviceId","vendetta-discord"),s.append("fileCreatedAt",new Date().toISOString()),s.append("fileModifiedAt",new Date().toISOString()),s.append("filename",t),s.append("metadata",JSON.stringify([])),console.log("[ImmichSave] Uploading to Immich:",`${r}/api/asset/upload`),console.log("[ImmichSave] API Key length:",o.length),console.log("[ImmichSave] FormData prepared with keys:",["assetData","deviceAssetId","deviceId","fileCreatedAt","fileModifiedAt","filename","metadata"]),console.log("[ImmichSave] Blob size:",e.size,"bytes"),console.log("[ImmichSave] Using Discord's native fetch for upload..."),(k?.fetch||fetch)(`${r}/api/asset/upload`,{method:"POST",headers:{"X-API-KEY":o,"User-Agent":"Discord-Mobile/1.0"},body:s})}).then(e=>e.ok?!0:e.text().then(s=>{throw new Error(`Upload failed: ${e.status} - ${s}`)})).catch(e=>{console.error("[ImmichSave] Upload error:",e),console.error("[ImmichSave] Error type:",e.constructor.name),console.error("[ImmichSave] Error stack:",e.stack);let s="Unknown error occurred";return e.message.includes("Network request failed")?s="Cannot connect to Immich server. Check your server URL and network connection.":e.message.includes("Upload failed: 401")?s="Invalid API key. Please check your Immich API key in settings.":e.message.includes("Upload failed: 403")?s="Access denied. Check your API key permissions.":e.message.includes("Upload failed: 404")?s="Immich API endpoint not found. Check your server URL.":e.message.includes("Upload failed: 500")?s="Immich server error. Check server logs.":s=e.message||"Unknown error occurred",c.showToast(`Failed to save: ${s}`,a.getAssetIDByName("ic_close_16px")),!1})},$=i=>{if(!S()){c.showToast("Please configure Immich settings first!",a.getAssetIDByName("ic_close_16px"));return}const t=i.attachments;if(!t||t.length===0){c.showToast("No media found in this message",a.getAssetIDByName("ic_close_16px"));return}const o=t.filter(m=>{const g=m.content_type?.startsWith("image/")||/\.(jpg|jpeg|png|gif|webp|bmp|svg)$/i.test(m.filename),F=m.content_type?.startsWith("video/")||/\.(mp4|mov|avi|mkv|webm|m4v|3gp|flv|wmv)$/i.test(m.filename);return g||F});if(o.length===0){c.showToast("No image or video attachments found",a.getAssetIDByName("ic_close_16px"));return}c.showToast(`Uploading ${o.length} file(s) to Immich...`,a.getAssetIDByName("ic_upload"));let r=0,e=0,s=0;const U=m=>P(m.url,m.filename).then(g=>{g?r++:e++,s++,o.length>1&&c.showToast(`Progress: ${s}/${o.length} files processed`,a.getAssetIDByName("ic_check")),s===o.length&&(r>0&&c.showToast(`Successfully saved ${r} file(s) to Immich!`,a.getAssetIDByName("ic_check")),e>0&&c.showToast(`Failed to save ${e} file(s)`,a.getAssetIDByName("ic_close_16px")))}).catch(g=>{e++,s++,s===o.length&&(r>0&&c.showToast(`Successfully saved ${r} file(s) to Immich!`,a.getAssetIDByName("ic_check")),e>0&&c.showToast(`Failed to save ${e} file(s)`,a.getAssetIDByName("ic_close_16px")))});o.forEach(m=>{U(m)})};var B={onLoad:()=>{A&&(f=_.before("render",A,i=>{try{const[t]=i,o=t.header?.props?.message;if(!o||!o.attachments?.some(r=>{const e=r.content_type?.startsWith("image/")||/\.(jpg|jpeg|png|gif|webp|bmp|svg)$/i.test(r.filename),s=r.content_type?.startsWith("video/")||/\.(mp4|mov|avi|mkv|webm|m4v|3gp|flv|wmv)$/i.test(r.filename);return e||s}))return;if(t.children&&Array.isArray(t.children)&&w&&!t.children.some(r=>r?.props?.label==="Save to Immich")){const r=n.React.createElement(w,{key:"save-to-immich",label:"Save to Immich",icon:a.getAssetIDByName("ic_download"),onPress:()=>{try{$(o)}catch(e){console.error("[ImmichSave] Error in Save to Immich handler:",e),c.showToast(`Failed to save: ${e.message||"Unknown error"}`,a.getAssetIDByName("ic_close_16px"))}}});t.children.unshift(r)}}catch(t){console.error("[ImmichSave] ActionSheet patch error:",t)}}))},onUnload:()=>{f&&f()},settings:()=>{const[i,t]=n.React.useState(u()),[o,r]=n.React.useState(v()),e=()=>{T(i),c.showToast("API Key saved!",a.getAssetIDByName("ic_check"))},s=()=>{D(o),c.showToast("Server URL saved!",a.getAssetIDByName("ic_check"))};return n.React.createElement(n.React.Fragment,null,n.React.createElement(l.Forms.FormSection,{title:"Immich Configuration"},n.React.createElement(l.Forms.FormText,{style:{marginBottom:10,marginLeft:10}},"Configure your Immich server connection:"),n.React.createElement(l.Forms.FormInput,{placeholder:"Enter your Immich API Key",value:i,onChange:t,secureTextEntry:!0}),n.React.createElement(l.Forms.FormRow,{label:"Save API Key",onPress:e}),n.React.createElement(l.Forms.FormInput,{placeholder:"Enter Immich Server URL (e.g., https://immich.example.com)",value:o,onChange:r}),n.React.createElement(l.Forms.FormRow,{label:"Save Server URL",onPress:s}),n.React.createElement(l.Forms.FormRow,{label:"Test Connection",onPress:E})),n.React.createElement(l.Forms.FormSection,{title:"Status"},n.React.createElement(l.Forms.FormText,{style:{marginBottom:10,marginLeft:10}},S()?"\u2705 Immich is configured and ready to use!":"\u274C Please configure Immich settings above")))}};return p.default=B,Object.defineProperty(p,"__esModule",{value:!0}),p})({},vendetta.ui.toasts,vendetta.patcher,vendetta.ui.assets,vendetta.metro,vendetta.plugin,vendetta.metro.common,vendetta.ui.components);
