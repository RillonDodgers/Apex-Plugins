(function(u,n,R,i,v,S,c,m){"use strict";const k={apiKey:"",serverUrl:""},g=()=>({...k,...S.storage}),w=a=>{Object.assign(S.storage,a)},b=a=>{const o=g();o.apiKey=a,w(o)},T=a=>{const o=g();o.serverUrl=a,w(o)},I=()=>g().apiKey,f=()=>g().serverUrl,A=()=>{const a=g();return a.apiKey.trim()!==""&&a.serverUrl.trim()!==""};v.findByProps("openLazy","hideActionSheet");const _=v.findByProps("ActionSheet")?.ActionSheet,F=v.findByProps("ActionSheetRow")?.ActionSheetRow;let y;const B=()=>{const a=I(),o=f();if(!a||!o){n.showToast("Immich not configured!",i.getAssetIDByName("ic_close_16px"));return}fetch(`${o}/api/albums`,{method:"GET",headers:{"X-API-KEY":a,Accept:"application/json"}}).then(r=>{r.status===200||r.status===401?n.showToast("\u2705 Immich connection successful!",i.getAssetIDByName("ic_check")):n.showToast(`\u274C Connection failed: ${r.status}`,i.getAssetIDByName("ic_close_16px"))}).catch(r=>{n.showToast(`\u274C Cannot reach server: ${r.message}`,i.getAssetIDByName("ic_close_16px"))})},D=(a,o)=>{const r=I(),s=f();return!r||!s?(n.showToast("Immich not configured! Please set API key and server URL in settings.",i.getAssetIDByName("ic_close_16px")),Promise.resolve(!1)):(console.log("[ImmichSave] Starting upload for:",o),console.log("[ImmichSave] File URL:",a),console.log("[ImmichSave] Server URL:",s),console.log("[ImmichSave] API Key length:",r.length),fetch(a).then(e=>{if(console.log("[ImmichSave] File download response:",e.status,e.statusText),!e.ok)throw new Error(`Failed to download file: ${e.status}`);return e.blob()}).then(e=>{const t=new FormData,h=new File([e],o,{type:e.type||"application/octet-stream",lastModified:Date.now()});console.log("[ImmichSave] Original blob:",{size:e.size,type:e.type}),console.log("[ImmichSave] File object:",{name:h.name,size:h.size,type:h.type,lastModified:h.lastModified}),console.log("[ImmichSave] Filename from Discord:",o),console.log("[ImmichSave] File URL being downloaded:",a);const l=new FileReader;l.onload=function($){const U=$.target?.result;if(U){const N=new Uint8Array(U),x=Array.from(N.slice(0,10)).map(C=>C.toString(16).padStart(2,"0")).join(" ");console.log("[ImmichSave] First 10 bytes of actual file:",x)}},l.readAsArrayBuffer(h),t.append("assetData",h);const d=`${o.match(/\d+/g)?.join("")||""}-${e.size}-${Date.now()}`;t.append("deviceAssetId",d),t.append("deviceId","discord");const p=new Date().toISOString();return t.append("fileCreatedAt",p),t.append("fileModifiedAt",p),t.append("fileSize",String(e.size)),console.log("[ImmichSave] Form data:",t),console.log("[ImmichSave] Uploading to:",`${s}/api/assets`),fetch(`${s}/api/assets`,{method:"POST",headers:{"x-api-key":r,Accept:"application/json"},body:t})}).then(e=>(console.log("[ImmichSave] Upload response status:",e.status,e.statusText),console.log("[ImmichSave] Upload response headers:",Object.fromEntries(e.headers.entries())),e.ok?e.text().then(t=>(console.log("[ImmichSave] Upload success response:",t),!0)):e.text().then(t=>{throw console.log("[ImmichSave] Upload error response body:",t),new Error(`Upload failed: ${e.status} - ${t}`)}))).catch(e=>{console.error("[ImmichSave] Upload error:",e),console.error("[ImmichSave] Error message:",e.message),console.error("[ImmichSave] Error type:",e.constructor.name),console.error("[ImmichSave] Error stack:",e.stack);let t="Unknown error occurred";return e.message.includes("Network request failed")?t="Cannot connect to Immich server. Check your server URL and network connection.":e.message.includes("Upload failed: 401")?t="Invalid API key. Please check your Immich API key in settings.":e.message.includes("Upload failed: 403")?t="Access denied. Check your API key permissions.":e.message.includes("Upload failed: 404")?t="Immich API endpoint not found. Check your server URL.":e.message.includes("Upload failed: 500")?t="Immich server error. Check server logs.":t=e.message||"Unknown error occurred",n.showToast(`Failed to save: ${t}`,i.getAssetIDByName("ic_close_16px")),!1}))},P=a=>{if(!A()){n.showToast("Please configure Immich settings first!",i.getAssetIDByName("ic_close_16px"));return}const o=a.attachments;if(!o||o.length===0){n.showToast("No media found in this message",i.getAssetIDByName("ic_close_16px"));return}const r=o.filter(l=>{const d=l.content_type?.startsWith("image/")||/\.(jpg|jpeg|png|gif|webp|bmp|svg)$/i.test(l.filename),p=l.content_type?.startsWith("video/")||/\.(mp4|mov|avi|mkv|webm|m4v|3gp|flv|wmv)$/i.test(l.filename);return d||p});if(r.length===0){n.showToast("No image or video attachments found",i.getAssetIDByName("ic_close_16px"));return}n.showToast(`Uploading ${r.length} file(s) to Immich...`,i.getAssetIDByName("ic_upload"));let s=0,e=0,t=0;const h=l=>D(l.url,l.filename).then(d=>{d?s++:e++,t++,r.length>1&&n.showToast(`Progress: ${t}/${r.length} files processed`,i.getAssetIDByName("ic_check")),t===r.length&&(s>0&&n.showToast(`Successfully saved ${s} file(s) to Immich!`,i.getAssetIDByName("ic_check")),e>0&&n.showToast(`Failed to save ${e} file(s)`,i.getAssetIDByName("ic_close_16px")))}).catch(d=>{e++,t++,t===r.length&&(s>0&&n.showToast(`Successfully saved ${s} file(s) to Immich!`,i.getAssetIDByName("ic_check")),e>0&&n.showToast(`Failed to save ${e} file(s)`,i.getAssetIDByName("ic_close_16px")))});r.forEach(l=>{h(l)})};var E={onLoad:()=>{_&&(y=R.before("render",_,a=>{try{const[o]=a,r=o.header?.props?.message;if(!r||!r.attachments?.some(s=>{const e=s.content_type?.startsWith("image/")||/\.(jpg|jpeg|png|gif|webp|bmp|svg)$/i.test(s.filename),t=s.content_type?.startsWith("video/")||/\.(mp4|mov|avi|mkv|webm|m4v|3gp|flv|wmv)$/i.test(s.filename);return e||t}))return;if(o.children&&Array.isArray(o.children)&&F&&!o.children.some(s=>s?.props?.label==="Save to Immich")){const s=c.React.createElement(F,{key:"save-to-immich",label:"Save to Immich",icon:i.getAssetIDByName("ic_download"),onPress:()=>{try{P(r)}catch(e){console.error("[ImmichSave] Error in Save to Immich handler:",e),n.showToast(`Failed to save: ${e.message||"Unknown error"}`,i.getAssetIDByName("ic_close_16px"))}}});o.children.unshift(s)}}catch(o){console.error("[ImmichSave] ActionSheet patch error:",o)}}))},onUnload:()=>{y&&y()},settings:()=>{const[a,o]=c.React.useState(I()),[r,s]=c.React.useState(f()),e=()=>{b(a),n.showToast("API Key saved!",i.getAssetIDByName("ic_check"))},t=()=>{T(r),n.showToast("Server URL saved!",i.getAssetIDByName("ic_check"))};return c.React.createElement(c.React.Fragment,null,c.React.createElement(m.Forms.FormSection,{title:"Immich Configuration"},c.React.createElement(m.Forms.FormText,{style:{marginBottom:10,marginLeft:10}},"Configure your Immich server connection:"),c.React.createElement(m.Forms.FormInput,{placeholder:"Enter your Immich API Key",value:a,onChange:o,secureTextEntry:!0}),c.React.createElement(m.Forms.FormRow,{label:"Save API Key",onPress:e}),c.React.createElement(m.Forms.FormInput,{placeholder:"Enter Immich Server URL (e.g., https://immich.example.com)",value:r,onChange:s}),c.React.createElement(m.Forms.FormRow,{label:"Save Server URL",onPress:t}),c.React.createElement(m.Forms.FormRow,{label:"Test Connection",onPress:B})),c.React.createElement(m.Forms.FormSection,{title:"Status"},c.React.createElement(m.Forms.FormText,{style:{marginBottom:10,marginLeft:10}},A()?"\u2705 Immich is configured and ready to use!":"\u274C Please configure Immich settings above")))}};return u.default=E,Object.defineProperty(u,"__esModule",{value:!0}),u})({},vendetta.ui.toasts,vendetta.patcher,vendetta.ui.assets,vendetta.metro,vendetta.plugin,vendetta.metro.common,vendetta.ui.components);
