(function(g,i,T,a,p,A,l,d){"use strict";const P={apiKey:"",serverUrl:""},u=()=>({...P,...A.storage}),w=n=>{Object.assign(A.storage,n)},F=n=>{const s=u();s.apiKey=n,w(s)},U=n=>{const s=u();s.serverUrl=n,w(s)},v=()=>u().apiKey,I=()=>u().serverUrl,S=()=>{const n=u();return n.apiKey.trim()!==""&&n.serverUrl.trim()!==""};p.findByProps("openLazy","hideActionSheet");const R=p.findByProps("ActionSheet")?.ActionSheet,_=p.findByProps("ActionSheetRow")?.ActionSheetRow;let f;const D=()=>{const n=v(),s=I();if(!n||!s){i.showToast("Immich not configured!",a.getAssetIDByName("ic_close_16px"));return}console.log("[ImmichSave] Testing with fetch (like MoreAlts) to:",`${s}/api/albums`),fetch(`${s}/api/albums`,{method:"GET",headers:{"X-API-KEY":n,"Content-Type":"application/json","User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36"}}).then(r=>{console.log("[ImmichSave] Fetch Response:",r.status,r.statusText),r.status===200||r.status===401?i.showToast("\u2705 Fetch works! Connection successful!",a.getAssetIDByName("ic_check")):i.showToast(`\u274C Fetch failed: ${r.status}`,a.getAssetIDByName("ic_close_16px"))}).catch(r=>{console.error("[ImmichSave] Fetch failed, trying XHR:",r);const e=new XMLHttpRequest;e.open("GET",`${s}/api/albums`,!0),e.setRequestHeader("X-API-KEY",n),e.setRequestHeader("Accept","application/json"),e.onreadystatechange=function(){e.readyState===4&&(console.log("[ImmichSave] XHR Response:",e.status,e.statusText),e.status===200||e.status===401?i.showToast("\u2705 XHR works! Connection successful!",a.getAssetIDByName("ic_check")):e.status===0?i.showToast("\u274C All requests blocked by Discord",a.getAssetIDByName("ic_close_16px")):i.showToast(`\u274C Connection failed: ${e.status}`,a.getAssetIDByName("ic_close_16px")))},e.onerror=function(){console.error("[ImmichSave] XHR also failed"),i.showToast("\u274C All network requests blocked",a.getAssetIDByName("ic_close_16px"))},e.timeout=1e4,e.send()})},E=(n,s)=>{const r=v(),e=I();return!r||!e?(i.showToast("Immich not configured! Please set API key and server URL in settings.",a.getAssetIDByName("ic_close_16px")),Promise.resolve(!1)):fetch(n).then(t=>{if(!t.ok)throw new Error(`Failed to download file: ${t.status}`);return t.blob()}).then(t=>{const o=new FormData;return o.append("assetData",t,s),o.append("deviceAssetId",`discord_${Date.now()}_${Math.random().toString(36).substr(2,9)}`),o.append("deviceId","vendetta-discord"),o.append("fileCreatedAt",new Date().toISOString()),o.append("fileModifiedAt",new Date().toISOString()),o.append("filename",s),o.append("metadata",JSON.stringify([])),console.log("[ImmichSave] Uploading to Immich:",`${e}/api/asset/upload`),console.log("[ImmichSave] API Key length:",r.length),console.log("[ImmichSave] FormData prepared with keys:",["assetData","deviceAssetId","deviceId","fileCreatedAt","fileModifiedAt","filename","metadata"]),console.log("[ImmichSave] Blob size:",t.size,"bytes"),fetch(`${e}/api/asset/upload`,{method:"POST",headers:{"X-API-KEY":r,"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36"},body:o}).catch(y=>(console.error("[ImmichSave] Fetch upload failed, trying XHR:",y),new Promise((m,h)=>{const c=new XMLHttpRequest;c.open("POST",`${e}/api/asset/upload`,!0),c.setRequestHeader("X-API-KEY",r),c.onreadystatechange=function(){if(c.readyState===4){console.log("[ImmichSave] Upload XHR Response:",c.status,c.statusText);const k={ok:c.status>=200&&c.status<300,status:c.status,text:()=>Promise.resolve(c.responseText)};k.ok&&console.log("[ImmichSave] Upload successful via XHR"),m(k)}},c.onerror=function(){console.error("[ImmichSave] Upload XHR Error"),h(new Error("Network request failed"))},c.ontimeout=function(){console.error("[ImmichSave] Upload XHR Timeout"),h(new Error("Request timeout"))},c.timeout=3e4,c.send(o)})))}).then(t=>t.ok?!0:t.text().then(o=>{throw new Error(`Upload failed: ${t.status} - ${o}`)})).catch(t=>{console.error("[ImmichSave] Upload error:",t),console.error("[ImmichSave] Error type:",t.constructor.name),console.error("[ImmichSave] Error stack:",t.stack);let o="Unknown error occurred";return t.message.includes("Network request failed")?o="Cannot connect to Immich server. Check your server URL and network connection.":t.message.includes("Upload failed: 401")?o="Invalid API key. Please check your Immich API key in settings.":t.message.includes("Upload failed: 403")?o="Access denied. Check your API key permissions.":t.message.includes("Upload failed: 404")?o="Immich API endpoint not found. Check your server URL.":t.message.includes("Upload failed: 500")?o="Immich server error. Check server logs.":o=t.message||"Unknown error occurred",i.showToast(`Failed to save: ${o}`,a.getAssetIDByName("ic_close_16px")),!1})},b=n=>{if(!S()){i.showToast("Please configure Immich settings first!",a.getAssetIDByName("ic_close_16px"));return}const s=n.attachments;if(!s||s.length===0){i.showToast("No media found in this message",a.getAssetIDByName("ic_close_16px"));return}const r=s.filter(m=>{const h=m.content_type?.startsWith("image/")||/\.(jpg|jpeg|png|gif|webp|bmp|svg)$/i.test(m.filename),c=m.content_type?.startsWith("video/")||/\.(mp4|mov|avi|mkv|webm|m4v|3gp|flv|wmv)$/i.test(m.filename);return h||c});if(r.length===0){i.showToast("No image or video attachments found",a.getAssetIDByName("ic_close_16px"));return}i.showToast(`Uploading ${r.length} file(s) to Immich...`,a.getAssetIDByName("ic_upload"));let e=0,t=0,o=0;const y=m=>E(m.url,m.filename).then(h=>{h?e++:t++,o++,r.length>1&&i.showToast(`Progress: ${o}/${r.length} files processed`,a.getAssetIDByName("ic_check")),o===r.length&&(e>0&&i.showToast(`Successfully saved ${e} file(s) to Immich!`,a.getAssetIDByName("ic_check")),t>0&&i.showToast(`Failed to save ${t} file(s)`,a.getAssetIDByName("ic_close_16px")))}).catch(h=>{t++,o++,o===r.length&&(e>0&&i.showToast(`Successfully saved ${e} file(s) to Immich!`,a.getAssetIDByName("ic_check")),t>0&&i.showToast(`Failed to save ${t} file(s)`,a.getAssetIDByName("ic_close_16px")))});r.forEach(m=>{y(m)})};var N={onLoad:()=>{R&&(f=T.before("render",R,n=>{try{const[s]=n,r=s.header?.props?.message;if(!r||!r.attachments?.some(e=>{const t=e.content_type?.startsWith("image/")||/\.(jpg|jpeg|png|gif|webp|bmp|svg)$/i.test(e.filename),o=e.content_type?.startsWith("video/")||/\.(mp4|mov|avi|mkv|webm|m4v|3gp|flv|wmv)$/i.test(e.filename);return t||o}))return;if(s.children&&Array.isArray(s.children)&&_&&!s.children.some(e=>e?.props?.label==="Save to Immich")){const e=l.React.createElement(_,{key:"save-to-immich",label:"Save to Immich",icon:a.getAssetIDByName("ic_download"),onPress:()=>{try{b(r)}catch(t){console.error("[ImmichSave] Error in Save to Immich handler:",t),i.showToast(`Failed to save: ${t.message||"Unknown error"}`,a.getAssetIDByName("ic_close_16px"))}}});s.children.unshift(e)}}catch(s){console.error("[ImmichSave] ActionSheet patch error:",s)}}))},onUnload:()=>{f&&f()},settings:()=>{const[n,s]=l.React.useState(v()),[r,e]=l.React.useState(I()),t=()=>{F(n),i.showToast("API Key saved!",a.getAssetIDByName("ic_check"))},o=()=>{U(r),i.showToast("Server URL saved!",a.getAssetIDByName("ic_check"))};return l.React.createElement(l.React.Fragment,null,l.React.createElement(d.Forms.FormSection,{title:"Immich Configuration"},l.React.createElement(d.Forms.FormText,{style:{marginBottom:10,marginLeft:10}},"Configure your Immich server connection:"),l.React.createElement(d.Forms.FormInput,{placeholder:"Enter your Immich API Key",value:n,onChange:s,secureTextEntry:!0}),l.React.createElement(d.Forms.FormRow,{label:"Save API Key",onPress:t}),l.React.createElement(d.Forms.FormInput,{placeholder:"Enter Immich Server URL (e.g., https://immich.example.com)",value:r,onChange:e}),l.React.createElement(d.Forms.FormRow,{label:"Save Server URL",onPress:o}),l.React.createElement(d.Forms.FormRow,{label:"Test Connection",onPress:D})),l.React.createElement(d.Forms.FormSection,{title:"Status"},l.React.createElement(d.Forms.FormText,{style:{marginBottom:10,marginLeft:10}},S()?"\u2705 Immich is configured and ready to use!":"\u274C Please configure Immich settings above")))}};return g.default=N,Object.defineProperty(g,"__esModule",{value:!0}),g})({},vendetta.ui.toasts,vendetta.patcher,vendetta.ui.assets,vendetta.metro,vendetta.plugin,vendetta.metro.common,vendetta.ui.components);
