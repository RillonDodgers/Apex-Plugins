(function(m,d,r,n,y,c,l,A){"use strict";const w={apiKey:"",serverUrl:""},g=()=>({...w,...y.storage}),f=o=>{Object.assign(y.storage,o)},_=o=>{const a=g();a.apiKey=o,f(a)},F=o=>{const a=g();a.serverUrl=o,f(a)},v=()=>g().apiKey,S=()=>g().serverUrl,I=()=>{const o=g();return o.apiKey.trim()!==""&&o.serverUrl.trim()!==""};let p=[];const E=()=>{d.findByStoreName("ChannelStore"),d.findByStoreName("MessageStore")},K=(o,a)=>{const i=v(),e=S();return!i||!e?(r.showToast("Immich not configured! Please set API key and server URL in settings.",n.getAssetIDByName("ic_close_16px")),Promise.resolve(!1)):fetch(o).then(t=>{if(!t.ok)throw new Error(`Failed to download image: ${t.status}`);return t.blob()}).then(t=>{const s=new FormData;return s.append("assetData",t,a),s.append("deviceAssetId",`discord_${Date.now()}_${Math.random().toString(36).substr(2,9)}`),s.append("deviceId","vendetta-discord"),s.append("fileCreatedAt",new Date().toISOString()),s.append("fileModifiedAt",new Date().toISOString()),fetch(`${e}/api/asset/upload`,{method:"POST",headers:{"X-API-KEY":i},body:s})}).then(t=>t.ok?!0:t.text().then(s=>{throw new Error(`Upload failed: ${t.status} - ${s}`)})).catch(t=>(console.error("Immich upload error:",t),r.showToast(`Upload failed: ${t.message}`,n.getAssetIDByName("ic_close_16px")),!1))},N=o=>{if(!I()){r.showToast("Please configure Immich settings first!",n.getAssetIDByName("ic_close_16px"));return}const a=o.attachments;if(!a||a.length===0){r.showToast("No images found in this message",n.getAssetIDByName("ic_close_16px"));return}const i=a.filter(h=>h.content_type?.startsWith("image/")||/\.(jpg|jpeg|png|gif|webp|bmp)$/i.test(h.filename));if(i.length===0){r.showToast("No image attachments found",n.getAssetIDByName("ic_close_16px"));return}let e=0,t=0,s=0;const D=h=>K(h.url,h.filename).then(u=>{u?e++:t++,s++,s===i.length&&(e>0&&r.showToast(`Successfully saved ${e} image(s) to Immich!`,n.getAssetIDByName("ic_check")),t>0&&r.showToast(`Failed to save ${t} image(s)`,n.getAssetIDByName("ic_close_16px")))}).catch(u=>{t++,s++,console.error("Error processing attachment:",u),s===i.length&&(e>0&&r.showToast(`Successfully saved ${e} image(s) to Immich!`,n.getAssetIDByName("ic_check")),t>0&&r.showToast(`Failed to save ${t} image(s)`,n.getAssetIDByName("ic_close_16px")))});i.forEach(h=>{D(h)})};var B={onLoad:()=>{E();try{const o=d.findByProps("ActionSheet")?.ActionSheet;if(o){console.log("Found ActionSheet component - patching for media links");const a=A.before("render",o,i=>{try{const[e]=i;if(console.log("ActionSheet render:",{sheetKey:e.sheetKey,hasMessage:!!e.message,hasContent:!!e.content,hasOptions:!!e.options,optionsCount:e.options?.length||0,allProps:Object.keys(e)}),!(["MessageOverflow","MessageActions","MessageContextMenu","MessageMenu"].includes(e.sheetKey)||e.sheetKey?.includes("Message")||e.sheetKey?.includes("Overflow"))){console.log(`Skipping ActionSheet with sheetKey: ${e.sheetKey}`);return}console.log(`Processing ActionSheet with sheetKey: ${e.sheetKey}`);const t=e.message||e.content?.props?.message||e.data?.message;if(console.log("Message search:",{propsMessage:!!e.message,contentMessage:!!e.content?.props?.message,dataMessage:!!e.data?.message,foundMessage:!!t}),!t||!t.attachments||t.attachments.length===0){console.log("No message or attachments found");return}if(console.log("Message found with attachments:",t.attachments.length),!t.attachments.some(s=>s.content_type?.startsWith("image/")||/\.(jpg|jpeg|png|gif|webp|bmp)$/i.test(s.filename))){console.log("No image attachments found");return}console.log("Found image attachments, adding Save to Immich option"),e.options&&!e.options.some(s=>s?.label==="Save to Immich")&&(e.options.unshift({label:"Save to Immich",icon:n.getAssetIDByName("ic_download"),onPress:()=>{try{console.log("Save to Immich pressed!"),N(t),e.hideActionSheet?.()}catch(s){console.error("Error saving to Immich:",s),r.showToast("Failed to save images to Immich",n.getAssetIDByName("ic_close_16px"))}}}),console.log("Added Save to Immich option to ActionSheet"))}catch(e){console.error("ActionSheet patch error:",e)}});p.push(a)}else console.warn("Could not find ActionSheet component")}catch(o){console.error("Error setting up ActionSheet patch:",o)}},onUnload:()=>{p.forEach(o=>{try{o()}catch(a){console.error("Error unpatching:",a)}}),p=[]},settings:()=>{const[o,a]=c.React.useState(v()),[i,e]=c.React.useState(S()),t=()=>{_(o),r.showToast("API Key saved!",n.getAssetIDByName("ic_check"))},s=()=>{F(i),r.showToast("Server URL saved!",n.getAssetIDByName("ic_check"))};return c.React.createElement(c.React.Fragment,null,c.React.createElement(l.Forms.FormSection,{title:"Immich Configuration"},c.React.createElement(l.Forms.FormText,{style:{marginBottom:10}},"Configure your Immich server connection:"),c.React.createElement(l.Forms.FormInput,{placeholder:"Enter your Immich API Key",value:o,onChange:a,secureTextEntry:!0}),c.React.createElement(l.Forms.FormRow,{label:"Save API Key",onPress:t}),c.React.createElement(l.Forms.FormInput,{placeholder:"Enter Immich Server URL (e.g., https://immich.example.com)",value:i,onChange:e}),c.React.createElement(l.Forms.FormRow,{label:"Save Server URL",onPress:s})),c.React.createElement(l.Forms.FormSection,{title:"Status"},c.React.createElement(l.Forms.FormText,{style:{marginBottom:10}},I()?"\u2705 Immich is configured and ready to use!":"\u274C Please configure Immich settings above")))}};return m.default=B,Object.defineProperty(m,"__esModule",{value:!0}),m})({},vendetta.metro,vendetta.ui.toasts,vendetta.ui.assets,vendetta.plugin,vendetta.metro.common,vendetta.ui.components,vendetta.patcher);
