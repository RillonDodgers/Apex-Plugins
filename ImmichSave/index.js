(function(g,a,k,s,p,w,l,d){"use strict";const T={apiKey:"",serverUrl:""},h=()=>({...T,...w.storage}),S=n=>{Object.assign(w.storage,n)},D=n=>{const r=h();r.apiKey=n,S(r)},E=n=>{const r=h();r.serverUrl=n,S(r)},v=()=>h().apiKey,I=()=>h().serverUrl,A=()=>{const n=h();return n.apiKey.trim()!==""&&n.serverUrl.trim()!==""};p.findByProps("openLazy","hideActionSheet");const R=p.findByProps("ActionSheet")?.ActionSheet,_=p.findByProps("ActionSheetRow")?.ActionSheetRow;let f;const U=()=>{const n=v(),r=I();if(!n||!r){a.showToast("Immich not configured!",s.getAssetIDByName("ic_close_16px"));return}console.log("[ImmichSave] Testing connection with XMLHttpRequest to:",`${r}/api/albums`);const e=new XMLHttpRequest;e.open("GET",`${r}/api/albums`,!0),e.setRequestHeader("X-API-KEY",n),e.setRequestHeader("Accept","application/json"),e.onreadystatechange=function(){e.readyState===4&&(console.log("[ImmichSave] XHR Response:",e.status,e.statusText),e.status===200||e.status===401?a.showToast("\u2705 Immich connection successful!",s.getAssetIDByName("ic_check")):e.status===0?a.showToast("\u274C Network blocked by Discord",s.getAssetIDByName("ic_close_16px")):a.showToast(`\u274C Connection failed: ${e.status}`,s.getAssetIDByName("ic_close_16px")))},e.onerror=function(){console.error("[ImmichSave] XHR Error occurred"),a.showToast("\u274C Network request blocked",s.getAssetIDByName("ic_close_16px"))},e.ontimeout=function(){console.error("[ImmichSave] XHR Timeout"),a.showToast("\u274C Connection timeout",s.getAssetIDByName("ic_close_16px"))},e.timeout=1e4,e.send()},N=(n,r)=>{const e=v(),i=I();return!e||!i?(a.showToast("Immich not configured! Please set API key and server URL in settings.",s.getAssetIDByName("ic_close_16px")),Promise.resolve(!1)):fetch(n).then(t=>{if(!t.ok)throw new Error(`Failed to download file: ${t.status}`);return t.blob()}).then(t=>{const o=new FormData;return o.append("assetData",t,r),o.append("deviceAssetId",`discord_${Date.now()}_${Math.random().toString(36).substr(2,9)}`),o.append("deviceId","vendetta-discord"),o.append("fileCreatedAt",new Date().toISOString()),o.append("fileModifiedAt",new Date().toISOString()),o.append("filename",r),o.append("metadata",JSON.stringify([])),console.log("[ImmichSave] Uploading to Immich:",`${i}/api/asset/upload`),console.log("[ImmichSave] API Key length:",e.length),console.log("[ImmichSave] FormData prepared with keys:",["assetData","deviceAssetId","deviceId","fileCreatedAt","fileModifiedAt","filename","metadata"]),console.log("[ImmichSave] Blob size:",t.size,"bytes"),new Promise((y,m)=>{const c=new XMLHttpRequest;c.open("POST",`${i}/api/asset/upload`,!0),c.setRequestHeader("X-API-KEY",e),c.onreadystatechange=function(){if(c.readyState===4){console.log("[ImmichSave] Upload XHR Response:",c.status,c.statusText);const u={ok:c.status>=200&&c.status<300,status:c.status,text:()=>Promise.resolve(c.responseText)};u.ok&&console.log("[ImmichSave] Upload successful via XHR"),y(u)}},c.onerror=function(){console.error("[ImmichSave] Upload XHR Error"),m(new Error("Network request failed"))},c.ontimeout=function(){console.error("[ImmichSave] Upload XHR Timeout"),m(new Error("Request timeout"))},c.timeout=3e4,c.send(o)})}).then(t=>t.ok?!0:t.text().then(o=>{throw new Error(`Upload failed: ${t.status} - ${o}`)})).catch(t=>{console.error("[ImmichSave] Upload error:",t),console.error("[ImmichSave] Error type:",t.constructor.name),console.error("[ImmichSave] Error stack:",t.stack);let o="Unknown error occurred";return t.message.includes("Network request failed")?o="Cannot connect to Immich server. Check your server URL and network connection.":t.message.includes("Upload failed: 401")?o="Invalid API key. Please check your Immich API key in settings.":t.message.includes("Upload failed: 403")?o="Access denied. Check your API key permissions.":t.message.includes("Upload failed: 404")?o="Immich API endpoint not found. Check your server URL.":t.message.includes("Upload failed: 500")?o="Immich server error. Check server logs.":o=t.message||"Unknown error occurred",a.showToast(`Failed to save: ${o}`,s.getAssetIDByName("ic_close_16px")),!1})},P=n=>{if(!A()){a.showToast("Please configure Immich settings first!",s.getAssetIDByName("ic_close_16px"));return}const r=n.attachments;if(!r||r.length===0){a.showToast("No media found in this message",s.getAssetIDByName("ic_close_16px"));return}const e=r.filter(m=>{const c=m.content_type?.startsWith("image/")||/\.(jpg|jpeg|png|gif|webp|bmp|svg)$/i.test(m.filename),u=m.content_type?.startsWith("video/")||/\.(mp4|mov|avi|mkv|webm|m4v|3gp|flv|wmv)$/i.test(m.filename);return c||u});if(e.length===0){a.showToast("No image or video attachments found",s.getAssetIDByName("ic_close_16px"));return}a.showToast(`Uploading ${e.length} file(s) to Immich...`,s.getAssetIDByName("ic_upload"));let i=0,t=0,o=0;const y=m=>N(m.url,m.filename).then(c=>{c?i++:t++,o++,e.length>1&&a.showToast(`Progress: ${o}/${e.length} files processed`,s.getAssetIDByName("ic_check")),o===e.length&&(i>0&&a.showToast(`Successfully saved ${i} file(s) to Immich!`,s.getAssetIDByName("ic_check")),t>0&&a.showToast(`Failed to save ${t} file(s)`,s.getAssetIDByName("ic_close_16px")))}).catch(c=>{t++,o++,o===e.length&&(i>0&&a.showToast(`Successfully saved ${i} file(s) to Immich!`,s.getAssetIDByName("ic_check")),t>0&&a.showToast(`Failed to save ${t} file(s)`,s.getAssetIDByName("ic_close_16px")))});e.forEach(m=>{y(m)})};var B={onLoad:()=>{R&&(f=k.before("render",R,n=>{try{const[r]=n,e=r.header?.props?.message;if(!e||!e.attachments?.some(i=>{const t=i.content_type?.startsWith("image/")||/\.(jpg|jpeg|png|gif|webp|bmp|svg)$/i.test(i.filename),o=i.content_type?.startsWith("video/")||/\.(mp4|mov|avi|mkv|webm|m4v|3gp|flv|wmv)$/i.test(i.filename);return t||o}))return;if(r.children&&Array.isArray(r.children)&&_&&!r.children.some(i=>i?.props?.label==="Save to Immich")){const i=l.React.createElement(_,{key:"save-to-immich",label:"Save to Immich",icon:s.getAssetIDByName("ic_download"),onPress:()=>{try{P(e)}catch(t){console.error("[ImmichSave] Error in Save to Immich handler:",t),a.showToast(`Failed to save: ${t.message||"Unknown error"}`,s.getAssetIDByName("ic_close_16px"))}}});r.children.unshift(i)}}catch(r){console.error("[ImmichSave] ActionSheet patch error:",r)}}))},onUnload:()=>{f&&f()},settings:()=>{const[n,r]=l.React.useState(v()),[e,i]=l.React.useState(I()),t=()=>{D(n),a.showToast("API Key saved!",s.getAssetIDByName("ic_check"))},o=()=>{E(e),a.showToast("Server URL saved!",s.getAssetIDByName("ic_check"))};return l.React.createElement(l.React.Fragment,null,l.React.createElement(d.Forms.FormSection,{title:"Immich Configuration"},l.React.createElement(d.Forms.FormText,{style:{marginBottom:10,marginLeft:10}},"Configure your Immich server connection:"),l.React.createElement(d.Forms.FormInput,{placeholder:"Enter your Immich API Key",value:n,onChange:r,secureTextEntry:!0}),l.React.createElement(d.Forms.FormRow,{label:"Save API Key",onPress:t}),l.React.createElement(d.Forms.FormInput,{placeholder:"Enter Immich Server URL (e.g., https://immich.example.com)",value:e,onChange:i}),l.React.createElement(d.Forms.FormRow,{label:"Save Server URL",onPress:o}),l.React.createElement(d.Forms.FormRow,{label:"Test Connection",onPress:U})),l.React.createElement(d.Forms.FormSection,{title:"Status"},l.React.createElement(d.Forms.FormText,{style:{marginBottom:10,marginLeft:10}},A()?"\u2705 Immich is configured and ready to use!":"\u274C Please configure Immich settings above")))}};return g.default=B,Object.defineProperty(g,"__esModule",{value:!0}),g})({},vendetta.ui.toasts,vendetta.patcher,vendetta.ui.assets,vendetta.metro,vendetta.plugin,vendetta.metro.common,vendetta.ui.components);
