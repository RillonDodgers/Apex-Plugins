(function(p,a,F,c,h,A,l,d){"use strict";const b={apiKey:"",serverUrl:""},g=()=>({...b,...A.storage}),T=s=>{Object.assign(A.storage,s)},_=s=>{const t=g();t.apiKey=s,T(t)},R=s=>{const t=g();t.serverUrl=s,T(t)},v=()=>g().apiKey,I=()=>g().serverUrl,k=()=>{const s=g();return s.apiKey.trim()!==""&&s.serverUrl.trim()!==""},B=h.findByProps("fetch")||h.findByProps("request")||h.findByProps("http"),S=h.findByProps("get","post","request"),f=h.findByProps("makeRequest")||h.findByProps("sendRequest"),U=h.findByProps("fetch","xhr")||h.findByProps("NetworkingModule");console.log("[ImmichSave] HTTP Module found:",!!S),console.log("[ImmichSave] Request Module found:",!!f),console.log("[ImmichSave] Network Module found:",!!U),h.findByProps("openLazy","hideActionSheet");const w=h.findByProps("ActionSheet")?.ActionSheet,P=h.findByProps("ActionSheetRow")?.ActionSheetRow;let y;const D=()=>{const s=v(),t=I();if(!s||!t){a.showToast("Immich not configured!",c.getAssetIDByName("ic_close_16px"));return}console.log("[ImmichSave] Testing connection to:",`${t}/api/albums`),console.log("[ImmichSave] Testing catbox domains first..."),["https://catbox.moe/user/api.php","https://litterbox.com/resources/internals/api.php","https://pomf.se/upload.php"].forEach((e,i)=>{fetch(e,{method:"GET"}).then(m=>{console.log(`[ImmichSave] Catbox test ${i+1}: SUCCESS - ${m.status}`)}).catch(m=>{console.log(`[ImmichSave] Catbox test ${i+1}: FAILED - ${m.message}`)})}),console.log("[ImmichSave] Testing our server:",`${t}/api/albums`),console.log("[ImmichSave] Skipping CSP bypass (caused crash), trying normal fetch..."),n();function n(){if(S?.get){console.log("[ImmichSave] Trying HTTPModule.get...");try{S.get(`${t}/api/albums`,{headers:{"X-API-KEY":s,"User-Agent":"Discord-Mobile/1.0"}}).then(e=>{console.log("[ImmichSave] HTTPModule SUCCESS:",e),a.showToast("\u2705 HTTPModule worked!",c.getAssetIDByName("ic_check"))}).catch(e=>{console.log("[ImmichSave] HTTPModule failed:",e),console.log("[ImmichSave] HTTPModule error type:",e.constructor.name),console.log("[ImmichSave] HTTPModule error message:",e.message),console.log("[ImmichSave] HTTPModule error stack:",e.stack),console.log("[ImmichSave] HTTPModule error props:",Object.keys(e)),r()});return}catch(e){console.log("[ImmichSave] HTTPModule error:",e)}}r()}function r(){if(f?.makeRequest){console.log("[ImmichSave] Trying RequestModule.makeRequest...");try{f.makeRequest({url:`${t}/api/albums`,method:"GET",headers:{"X-API-KEY":s,"User-Agent":"Discord-Mobile/1.0"}}).then(e=>{console.log("[ImmichSave] RequestModule SUCCESS:",e),a.showToast("\u2705 RequestModule worked!",c.getAssetIDByName("ic_check"))}).catch(e=>{console.log("[ImmichSave] RequestModule failed:",e),console.log("[ImmichSave] RequestModule error type:",e.constructor.name),console.log("[ImmichSave] RequestModule error message:",e.message),console.log("[ImmichSave] RequestModule error stack:",e.stack),console.log("[ImmichSave] RequestModule error props:",Object.keys(e)),o()});return}catch(e){console.log("[ImmichSave] RequestModule error:",e)}}o()}function o(){console.log("[ImmichSave] Falling back to normal fetch..."),fetch(`${t}/api/albums`,{method:"GET",headers:{"X-API-KEY":s,"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",Accept:"*/*","Accept-Language":"en-US,en;q=0.9","Cache-Control":"no-cache",Pragma:"no-cache"}}).then(e=>{console.log("[ImmichSave] Connection test response:",e.status,e.statusText),e.ok?a.showToast("\u2705 Immich connection successful!",c.getAssetIDByName("ic_check")):a.showToast(`\u274C Connection failed: ${e.status}`,c.getAssetIDByName("ic_close_16px"))}).catch(e=>{if(console.error("[ImmichSave] Primary connection test failed:",e),console.error("[ImmichSave] Fetch error type:",e.constructor.name),console.error("[ImmichSave] Fetch error message:",e.message),console.error("[ImmichSave] Fetch error stack:",e.stack),console.error("[ImmichSave] Fetch error cause:",e.cause),console.error("[ImmichSave] Fetch error code:",e.code),console.error("[ImmichSave] Fetch error errno:",e.errno),console.error("[ImmichSave] Fetch error syscall:",e.syscall),console.error("[ImmichSave] Fetch error hostname:",e.hostname),console.error("[ImmichSave] Fetch error port:",e.port),console.error("[ImmichSave] Fetch error address:",e.address),console.error("[ImmichSave] Fetch all error props:",Object.keys(e)),console.error("[ImmichSave] Fetch error toString:",e.toString()),console.error("[ImmichSave] Fetch error valueOf:",e.valueOf()),typeof e=="object"&&e!==null)for(const i in e)try{console.error(`[ImmichSave] Fetch error.${i}:`,e[i])}catch{console.error(`[ImmichSave] Could not log error.${i}`)}console.log("[ImmichSave] Trying simpler connection test to:",t),fetch(t,{method:"GET",mode:"no-cors"}).then(i=>{console.log("[ImmichSave] Simple test response:",i.type,i.status),a.showToast("\u2705 Server reachable (no-cors mode)",c.getAssetIDByName("ic_check"))}).catch(i=>{console.error("[ImmichSave] All connection tests failed:",i),console.error("[ImmichSave] Final error type:",i.constructor.name),console.error("[ImmichSave] Final error message:",i.message),console.error("[ImmichSave] Final error stack:",i.stack),a.showToast(`\u274C Cannot reach server: ${e.message}`,c.getAssetIDByName("ic_close_16px"))})})}},C=(s,t)=>{const n=v(),r=I();return!n||!r?(a.showToast("Immich not configured! Please set API key and server URL in settings.",c.getAssetIDByName("ic_close_16px")),Promise.resolve(!1)):fetch(s).then(o=>{if(!o.ok)throw new Error(`Failed to download file: ${o.status}`);return o.blob()}).then(o=>{const e=new FormData;return e.append("assetData",o,t),e.append("deviceAssetId",`discord_${Date.now()}_${Math.random().toString(36).substr(2,9)}`),e.append("deviceId","vendetta-discord"),e.append("fileCreatedAt",new Date().toISOString()),e.append("fileModifiedAt",new Date().toISOString()),e.append("filename",t),e.append("metadata",JSON.stringify([])),console.log("[ImmichSave] Uploading to Immich:",`${r}/api/asset/upload`),console.log("[ImmichSave] API Key length:",n.length),console.log("[ImmichSave] FormData prepared with keys:",["assetData","deviceAssetId","deviceId","fileCreatedAt","fileModifiedAt","filename","metadata"]),console.log("[ImmichSave] Blob size:",o.size,"bytes"),console.log("[ImmichSave] Using Discord's native fetch for upload..."),(B?.fetch||fetch)(`${r}/api/asset/upload`,{method:"POST",headers:{"X-API-KEY":n,"User-Agent":"Discord-Mobile/1.0"},body:e})}).then(o=>o.ok?!0:o.text().then(e=>{throw new Error(`Upload failed: ${o.status} - ${e}`)})).catch(o=>{console.error("[ImmichSave] Upload error:",o),console.error("[ImmichSave] Error type:",o.constructor.name),console.error("[ImmichSave] Error stack:",o.stack);let e="Unknown error occurred";return o.message.includes("Network request failed")?e="Cannot connect to Immich server. Check your server URL and network connection.":o.message.includes("Upload failed: 401")?e="Invalid API key. Please check your Immich API key in settings.":o.message.includes("Upload failed: 403")?e="Access denied. Check your API key permissions.":o.message.includes("Upload failed: 404")?e="Immich API endpoint not found. Check your server URL.":o.message.includes("Upload failed: 500")?e="Immich server error. Check server logs.":e=o.message||"Unknown error occurred",a.showToast(`Failed to save: ${e}`,c.getAssetIDByName("ic_close_16px")),!1})},E=s=>{if(!k()){a.showToast("Please configure Immich settings first!",c.getAssetIDByName("ic_close_16px"));return}const t=s.attachments;if(!t||t.length===0){a.showToast("No media found in this message",c.getAssetIDByName("ic_close_16px"));return}const n=t.filter(m=>{const u=m.content_type?.startsWith("image/")||/\.(jpg|jpeg|png|gif|webp|bmp|svg)$/i.test(m.filename),M=m.content_type?.startsWith("video/")||/\.(mp4|mov|avi|mkv|webm|m4v|3gp|flv|wmv)$/i.test(m.filename);return u||M});if(n.length===0){a.showToast("No image or video attachments found",c.getAssetIDByName("ic_close_16px"));return}a.showToast(`Uploading ${n.length} file(s) to Immich...`,c.getAssetIDByName("ic_upload"));let r=0,o=0,e=0;const i=m=>C(m.url,m.filename).then(u=>{u?r++:o++,e++,n.length>1&&a.showToast(`Progress: ${e}/${n.length} files processed`,c.getAssetIDByName("ic_check")),e===n.length&&(r>0&&a.showToast(`Successfully saved ${r} file(s) to Immich!`,c.getAssetIDByName("ic_check")),o>0&&a.showToast(`Failed to save ${o} file(s)`,c.getAssetIDByName("ic_close_16px")))}).catch(u=>{o++,e++,e===n.length&&(r>0&&a.showToast(`Successfully saved ${r} file(s) to Immich!`,c.getAssetIDByName("ic_check")),o>0&&a.showToast(`Failed to save ${o} file(s)`,c.getAssetIDByName("ic_close_16px")))});n.forEach(m=>{i(m)})};var $={onLoad:()=>{w&&(y=F.before("render",w,s=>{try{const[t]=s,n=t.header?.props?.message;if(!n||!n.attachments?.some(r=>{const o=r.content_type?.startsWith("image/")||/\.(jpg|jpeg|png|gif|webp|bmp|svg)$/i.test(r.filename),e=r.content_type?.startsWith("video/")||/\.(mp4|mov|avi|mkv|webm|m4v|3gp|flv|wmv)$/i.test(r.filename);return o||e}))return;if(t.children&&Array.isArray(t.children)&&P&&!t.children.some(r=>r?.props?.label==="Save to Immich")){const r=l.React.createElement(P,{key:"save-to-immich",label:"Save to Immich",icon:c.getAssetIDByName("ic_download"),onPress:()=>{try{E(n)}catch(o){console.error("[ImmichSave] Error in Save to Immich handler:",o),a.showToast(`Failed to save: ${o.message||"Unknown error"}`,c.getAssetIDByName("ic_close_16px"))}}});t.children.unshift(r)}}catch(t){console.error("[ImmichSave] ActionSheet patch error:",t)}}))},onUnload:()=>{y&&y()},settings:()=>{const[s,t]=l.React.useState(v()),[n,r]=l.React.useState(I()),o=()=>{_(s),a.showToast("API Key saved!",c.getAssetIDByName("ic_check"))},e=()=>{R(n),a.showToast("Server URL saved!",c.getAssetIDByName("ic_check"))};return l.React.createElement(l.React.Fragment,null,l.React.createElement(d.Forms.FormSection,{title:"Immich Configuration"},l.React.createElement(d.Forms.FormText,{style:{marginBottom:10,marginLeft:10}},"Configure your Immich server connection:"),l.React.createElement(d.Forms.FormInput,{placeholder:"Enter your Immich API Key",value:s,onChange:t,secureTextEntry:!0}),l.React.createElement(d.Forms.FormRow,{label:"Save API Key",onPress:o}),l.React.createElement(d.Forms.FormInput,{placeholder:"Enter Immich Server URL (e.g., https://immich.example.com)",value:n,onChange:r}),l.React.createElement(d.Forms.FormRow,{label:"Save Server URL",onPress:e}),l.React.createElement(d.Forms.FormRow,{label:"Test Connection",onPress:D})),l.React.createElement(d.Forms.FormSection,{title:"Status"},l.React.createElement(d.Forms.FormText,{style:{marginBottom:10,marginLeft:10}},k()?"\u2705 Immich is configured and ready to use!":"\u274C Please configure Immich settings above")))}};return p.default=$,Object.defineProperty(p,"__esModule",{value:!0}),p})({},vendetta.ui.toasts,vendetta.patcher,vendetta.ui.assets,vendetta.metro,vendetta.plugin,vendetta.metro.common,vendetta.ui.components);
