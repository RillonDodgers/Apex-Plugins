(function(g,d,s,r,f,c,l,A){"use strict";const w={apiKey:"",serverUrl:""},h=()=>({...w,...f.storage}),y=o=>{Object.assign(f.storage,o)},_=o=>{const a=h();a.apiKey=o,y(a)},F=o=>{const a=h();a.serverUrl=o,y(a)},v=()=>h().apiKey,I=()=>h().serverUrl,S=()=>{const o=h();return o.apiKey.trim()!==""&&o.serverUrl.trim()!==""};let u=[];const E=()=>{d.findByStoreName("ChannelStore"),d.findByStoreName("MessageStore")},N=(o,a)=>{const i=v(),t=I();return!i||!t?(s.showToast("Immich not configured! Please set API key and server URL in settings.",r.getAssetIDByName("ic_close_16px")),Promise.resolve(!1)):fetch(o).then(e=>{if(!e.ok)throw new Error(`Failed to download image: ${e.status}`);return e.blob()}).then(e=>{const n=new FormData;return n.append("assetData",e,a),n.append("deviceAssetId",`discord_${Date.now()}_${Math.random().toString(36).substr(2,9)}`),n.append("deviceId","vendetta-discord"),n.append("fileCreatedAt",new Date().toISOString()),n.append("fileModifiedAt",new Date().toISOString()),fetch(`${t}/api/asset/upload`,{method:"POST",headers:{"X-API-KEY":i},body:n})}).then(e=>e.ok?!0:e.text().then(n=>{throw new Error(`Upload failed: ${e.status} - ${n}`)})).catch(e=>(console.error("Immich upload error:",e),s.showToast(`Upload failed: ${e.message}`,r.getAssetIDByName("ic_close_16px")),!1))},B=o=>{if(!S()){s.showToast("Please configure Immich settings first!",r.getAssetIDByName("ic_close_16px"));return}const a=o.attachments;if(!a||a.length===0){s.showToast("No images found in this message",r.getAssetIDByName("ic_close_16px"));return}const i=a.filter(m=>m.content_type?.startsWith("image/")||/\.(jpg|jpeg|png|gif|webp|bmp)$/i.test(m.filename));if(i.length===0){s.showToast("No image attachments found",r.getAssetIDByName("ic_close_16px"));return}let t=0,e=0,n=0;const R=m=>N(m.url,m.filename).then(p=>{p?t++:e++,n++,n===i.length&&(t>0&&s.showToast(`Successfully saved ${t} image(s) to Immich!`,r.getAssetIDByName("ic_check")),e>0&&s.showToast(`Failed to save ${e} image(s)`,r.getAssetIDByName("ic_close_16px")))}).catch(p=>{e++,n++,console.error("Error processing attachment:",p),n===i.length&&(t>0&&s.showToast(`Successfully saved ${t} image(s) to Immich!`,r.getAssetIDByName("ic_check")),e>0&&s.showToast(`Failed to save ${e} image(s)`,r.getAssetIDByName("ic_close_16px")))});i.forEach(m=>{R(m)})};var D={onLoad:()=>{E();try{const o=d.findByProps("ActionSheet")?.ActionSheet;if(o){console.log("Found ActionSheet component - patching for media links");const a=A.before("render",o,i=>{try{const[t]=i;if(console.log("ActionSheet render:",{sheetKey:t.sheetKey,hasMessage:!!t.message,hasContent:!!t.content,hasOptions:!!t.options,optionsCount:t.options?.length||0}),t.sheetKey!=="MessageOverflow")return;const e=t.message||t.content?.props?.message;if(!e||!e.attachments||e.attachments.length===0){console.log("No message or attachments found");return}if(console.log("Message found with attachments:",e.attachments.length),!e.attachments.some(n=>n.content_type?.startsWith("image/")||/\.(jpg|jpeg|png|gif|webp|bmp)$/i.test(n.filename))){console.log("No image attachments found");return}console.log("Found image attachments, adding Save to Immich option"),t.options&&!t.options.some(n=>n?.label==="Save to Immich")&&(t.options.unshift({label:"Save to Immich",icon:r.getAssetIDByName("ic_download"),onPress:()=>{try{console.log("Save to Immich pressed!"),B(e),t.hideActionSheet?.()}catch(n){console.error("Error saving to Immich:",n),s.showToast("Failed to save images to Immich",r.getAssetIDByName("ic_close_16px"))}}}),console.log("Added Save to Immich option to ActionSheet"))}catch(t){console.error("ActionSheet patch error:",t)}});u.push(a)}else console.warn("Could not find ActionSheet component")}catch(o){console.error("Error setting up ActionSheet patch:",o)}},onUnload:()=>{u.forEach(o=>{try{o()}catch(a){console.error("Error unpatching:",a)}}),u=[]},settings:()=>{const[o,a]=c.React.useState(v()),[i,t]=c.React.useState(I()),e=()=>{_(o),s.showToast("API Key saved!",r.getAssetIDByName("ic_check"))},n=()=>{F(i),s.showToast("Server URL saved!",r.getAssetIDByName("ic_check"))};return c.React.createElement(c.React.Fragment,null,c.React.createElement(l.Forms.FormSection,{title:"Immich Configuration"},c.React.createElement(l.Forms.FormText,{style:{marginBottom:10}},"Configure your Immich server connection:"),c.React.createElement(l.Forms.FormInput,{placeholder:"Enter your Immich API Key",value:o,onChange:a,secureTextEntry:!0}),c.React.createElement(l.Forms.FormRow,{label:"Save API Key",onPress:e}),c.React.createElement(l.Forms.FormInput,{placeholder:"Enter Immich Server URL (e.g., https://immich.example.com)",value:i,onChange:t}),c.React.createElement(l.Forms.FormRow,{label:"Save Server URL",onPress:n})),c.React.createElement(l.Forms.FormSection,{title:"Status"},c.React.createElement(l.Forms.FormText,{style:{marginBottom:10}},S()?"\u2705 Immich is configured and ready to use!":"\u274C Please configure Immich settings above")))}};return g.default=D,Object.defineProperty(g,"__esModule",{value:!0}),g})({},vendetta.metro,vendetta.ui.toasts,vendetta.ui.assets,vendetta.plugin,vendetta.metro.common,vendetta.ui.components,vendetta.patcher);
