(function(I,a,R,s,l,T,m,d){"use strict";const _={apiKey:"",serverUrl:""},p=()=>({..._,...T.storage}),A=r=>{Object.assign(T.storage,r)},B=r=>{const t=p();t.apiKey=r,A(t)},E=r=>{const t=p();t.serverUrl=r,A(t)},f=()=>p().apiKey,S=()=>p().serverUrl,w=()=>{const r=p();return r.apiKey.trim()!==""&&r.serverUrl.trim()!==""},D=l.findByProps("fetch")||l.findByProps("request")||l.findByProps("http"),M=l.findByProps("fetch")||l.findByProps("XMLHttpRequest"),U=l.findByProps("HermesInternal")||l.findByProps("global"),$=l.findByProps("NativeModules"),k=l.findByProps("get","post","request"),P=l.findByProps("makeRequest")||l.findByProps("sendRequest");console.log("[ImmichSave] NetworkingModule found:",!!M),console.log("[ImmichSave] HermesModule found:",!!U),console.log("[ImmichSave] ReactNativeModule found:",!!$);let g=null,u=!1;function N(){try{console.log("[ImmichSave] Attempting to patch Hermes fetch..."),typeof global.fetch=="function"&&!g&&(g=global.fetch,console.log("[ImmichSave] Original fetch stored")),global.fetch=function(r,t){if(console.log("[ImmichSave] Patched fetch called for:",r),typeof r=="string"&&r.includes("pictures.dillonrodgers.party")){console.log("[ImmichSave] Bypassing restrictions for our domain");try{return g.call(this,r,t)}catch{return console.log("[ImmichSave] Original fetch failed, trying XMLHttpRequest fallback"),new Promise((n,c)=>{const o=new XMLHttpRequest;if(o.open(t?.method||"GET",r,!0),t?.headers)for(const[e,i]of Object.entries(t.headers))o.setRequestHeader(e,String(i));o.onload=()=>{n({ok:o.status>=200&&o.status<300,status:o.status,statusText:o.statusText,text:()=>Promise.resolve(o.responseText),json:()=>Promise.resolve(JSON.parse(o.responseText))})},o.onerror=()=>c(new Error("Network request failed")),o.send(t?.body)})}}return g.call(this,r,t)},u=!0,console.log("[ImmichSave] Hermes fetch patch applied successfully!")}catch(r){console.error("[ImmichSave] Failed to patch Hermes fetch:",r),u=!1}}N(),l.findByProps("openLazy","hideActionSheet");const b=l.findByProps("ActionSheet")?.ActionSheet,F=l.findByProps("ActionSheetRow")?.ActionSheetRow;let y;const C=()=>{const r=f(),t=S();if(!r||!t){a.showToast("Immich not configured!",s.getAssetIDByName("ic_close_16px"));return}console.log("[ImmichSave] Testing connection to:",`${t}/api/albums`),console.log("[ImmichSave] Testing catbox domains first..."),["https://catbox.moe/user/api.php","https://litterbox.com/resources/internals/api.php","https://pomf.se/upload.php"].forEach((e,i)=>{fetch(e,{method:"GET"}).then(h=>{console.log(`[ImmichSave] Catbox test ${i+1}: SUCCESS - ${h.status}`)}).catch(h=>{console.log(`[ImmichSave] Catbox test ${i+1}: FAILED - ${h.message}`)})}),console.log("[ImmichSave] Testing our server:",`${t}/api/albums`),console.log("[ImmichSave] Testing Hermes patch..."),console.log("[ImmichSave] Patch applied:",u),u?(console.log("[ImmichSave] Using patched fetch for our domain"),a.showToast("\u{1F527} Hermes patch applied - testing...",s.getAssetIDByName("ic_check"))):console.log("[ImmichSave] Patch failed, using normal methods"),n();function n(){if(k?.get){console.log("[ImmichSave] Trying HTTPModule.get...");try{k.get(`${t}/api/albums`,{headers:{"X-API-KEY":r,"User-Agent":"Discord-Mobile/1.0"}}).then(e=>{console.log("[ImmichSave] HTTPModule SUCCESS:",e),a.showToast("\u2705 HTTPModule worked!",s.getAssetIDByName("ic_check"))}).catch(e=>{console.log("[ImmichSave] HTTPModule failed:",e),console.log("[ImmichSave] HTTPModule error type:",e.constructor.name),console.log("[ImmichSave] HTTPModule error message:",e.message),console.log("[ImmichSave] HTTPModule error stack:",e.stack),console.log("[ImmichSave] HTTPModule error props:",Object.keys(e)),c()});return}catch(e){console.log("[ImmichSave] HTTPModule error:",e)}}c()}function c(){if(P?.makeRequest){console.log("[ImmichSave] Trying RequestModule.makeRequest...");try{P.makeRequest({url:`${t}/api/albums`,method:"GET",headers:{"X-API-KEY":r,"User-Agent":"Discord-Mobile/1.0"}}).then(e=>{console.log("[ImmichSave] RequestModule SUCCESS:",e),a.showToast("\u2705 RequestModule worked!",s.getAssetIDByName("ic_check"))}).catch(e=>{console.log("[ImmichSave] RequestModule failed:",e),console.log("[ImmichSave] RequestModule error type:",e.constructor.name),console.log("[ImmichSave] RequestModule error message:",e.message),console.log("[ImmichSave] RequestModule error stack:",e.stack),console.log("[ImmichSave] RequestModule error props:",Object.keys(e)),o()});return}catch(e){console.log("[ImmichSave] RequestModule error:",e)}}o()}function o(){console.log("[ImmichSave] Falling back to normal fetch..."),fetch(`${t}/api/albums`,{method:"GET",headers:{"X-API-KEY":r,"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",Accept:"*/*","Accept-Language":"en-US,en;q=0.9","Cache-Control":"no-cache",Pragma:"no-cache"}}).then(e=>{console.log("[ImmichSave] Connection test response:",e.status,e.statusText),e.ok?a.showToast("\u2705 Immich connection successful!",s.getAssetIDByName("ic_check")):a.showToast(`\u274C Connection failed: ${e.status}`,s.getAssetIDByName("ic_close_16px"))}).catch(e=>{if(console.error("[ImmichSave] Primary connection test failed:",e),console.error("[ImmichSave] Fetch error type:",e.constructor.name),console.error("[ImmichSave] Fetch error message:",e.message),console.error("[ImmichSave] Fetch error stack:",e.stack),console.error("[ImmichSave] Fetch error cause:",e.cause),console.error("[ImmichSave] Fetch error code:",e.code),console.error("[ImmichSave] Fetch error errno:",e.errno),console.error("[ImmichSave] Fetch error syscall:",e.syscall),console.error("[ImmichSave] Fetch error hostname:",e.hostname),console.error("[ImmichSave] Fetch error port:",e.port),console.error("[ImmichSave] Fetch error address:",e.address),console.error("[ImmichSave] Fetch all error props:",Object.keys(e)),console.error("[ImmichSave] Fetch error toString:",e.toString()),console.error("[ImmichSave] Fetch error valueOf:",e.valueOf()),typeof e=="object"&&e!==null)for(const i in e)try{console.error(`[ImmichSave] Fetch error.${i}:`,e[i])}catch{console.error(`[ImmichSave] Could not log error.${i}`)}console.log("[ImmichSave] Trying simpler connection test to:",t),fetch(t,{method:"GET",mode:"no-cors"}).then(i=>{console.log("[ImmichSave] Simple test response:",i.type,i.status),a.showToast("\u2705 Server reachable (no-cors mode)",s.getAssetIDByName("ic_check"))}).catch(i=>{console.error("[ImmichSave] All connection tests failed:",i),console.error("[ImmichSave] Final error type:",i.constructor.name),console.error("[ImmichSave] Final error message:",i.message),console.error("[ImmichSave] Final error stack:",i.stack),a.showToast(`\u274C Cannot reach server: ${e.message}`,s.getAssetIDByName("ic_close_16px"))})})}},x=(r,t)=>{const n=f(),c=S();return!n||!c?(a.showToast("Immich not configured! Please set API key and server URL in settings.",s.getAssetIDByName("ic_close_16px")),Promise.resolve(!1)):fetch(r).then(o=>{if(!o.ok)throw new Error(`Failed to download file: ${o.status}`);return o.blob()}).then(o=>{const e=new FormData;return e.append("assetData",o,t),e.append("deviceAssetId",`discord_${Date.now()}_${Math.random().toString(36).substr(2,9)}`),e.append("deviceId","vendetta-discord"),e.append("fileCreatedAt",new Date().toISOString()),e.append("fileModifiedAt",new Date().toISOString()),e.append("filename",t),e.append("metadata",JSON.stringify([])),console.log("[ImmichSave] Uploading to Immich:",`${c}/api/asset/upload`),console.log("[ImmichSave] API Key length:",n.length),console.log("[ImmichSave] FormData prepared with keys:",["assetData","deviceAssetId","deviceId","fileCreatedAt","fileModifiedAt","filename","metadata"]),console.log("[ImmichSave] Blob size:",o.size,"bytes"),console.log("[ImmichSave] Using Discord's native fetch for upload..."),(D?.fetch||fetch)(`${c}/api/asset/upload`,{method:"POST",headers:{"X-API-KEY":n,"User-Agent":"Discord-Mobile/1.0"},body:e})}).then(o=>o.ok?!0:o.text().then(e=>{throw new Error(`Upload failed: ${o.status} - ${e}`)})).catch(o=>{console.error("[ImmichSave] Upload error:",o),console.error("[ImmichSave] Error type:",o.constructor.name),console.error("[ImmichSave] Error stack:",o.stack);let e="Unknown error occurred";return o.message.includes("Network request failed")?e="Cannot connect to Immich server. Check your server URL and network connection.":o.message.includes("Upload failed: 401")?e="Invalid API key. Please check your Immich API key in settings.":o.message.includes("Upload failed: 403")?e="Access denied. Check your API key permissions.":o.message.includes("Upload failed: 404")?e="Immich API endpoint not found. Check your server URL.":o.message.includes("Upload failed: 500")?e="Immich server error. Check server logs.":e=o.message||"Unknown error occurred",a.showToast(`Failed to save: ${e}`,s.getAssetIDByName("ic_close_16px")),!1})},q=r=>{if(!w()){a.showToast("Please configure Immich settings first!",s.getAssetIDByName("ic_close_16px"));return}const t=r.attachments;if(!t||t.length===0){a.showToast("No media found in this message",s.getAssetIDByName("ic_close_16px"));return}const n=t.filter(h=>{const v=h.content_type?.startsWith("image/")||/\.(jpg|jpeg|png|gif|webp|bmp|svg)$/i.test(h.filename),K=h.content_type?.startsWith("video/")||/\.(mp4|mov|avi|mkv|webm|m4v|3gp|flv|wmv)$/i.test(h.filename);return v||K});if(n.length===0){a.showToast("No image or video attachments found",s.getAssetIDByName("ic_close_16px"));return}a.showToast(`Uploading ${n.length} file(s) to Immich...`,s.getAssetIDByName("ic_upload"));let c=0,o=0,e=0;const i=h=>x(h.url,h.filename).then(v=>{v?c++:o++,e++,n.length>1&&a.showToast(`Progress: ${e}/${n.length} files processed`,s.getAssetIDByName("ic_check")),e===n.length&&(c>0&&a.showToast(`Successfully saved ${c} file(s) to Immich!`,s.getAssetIDByName("ic_check")),o>0&&a.showToast(`Failed to save ${o} file(s)`,s.getAssetIDByName("ic_close_16px")))}).catch(v=>{o++,e++,e===n.length&&(c>0&&a.showToast(`Successfully saved ${c} file(s) to Immich!`,s.getAssetIDByName("ic_check")),o>0&&a.showToast(`Failed to save ${o} file(s)`,s.getAssetIDByName("ic_close_16px")))});n.forEach(h=>{i(h)})};var H={onLoad:()=>{b&&(y=R.before("render",b,r=>{try{const[t]=r,n=t.header?.props?.message;if(!n||!n.attachments?.some(c=>{const o=c.content_type?.startsWith("image/")||/\.(jpg|jpeg|png|gif|webp|bmp|svg)$/i.test(c.filename),e=c.content_type?.startsWith("video/")||/\.(mp4|mov|avi|mkv|webm|m4v|3gp|flv|wmv)$/i.test(c.filename);return o||e}))return;if(t.children&&Array.isArray(t.children)&&F&&!t.children.some(c=>c?.props?.label==="Save to Immich")){const c=m.React.createElement(F,{key:"save-to-immich",label:"Save to Immich",icon:s.getAssetIDByName("ic_download"),onPress:()=>{try{q(n)}catch(o){console.error("[ImmichSave] Error in Save to Immich handler:",o),a.showToast(`Failed to save: ${o.message||"Unknown error"}`,s.getAssetIDByName("ic_close_16px"))}}});t.children.unshift(c)}}catch(t){console.error("[ImmichSave] ActionSheet patch error:",t)}}))},onUnload:()=>{y&&y(),g&&u&&(console.log("[ImmichSave] Restoring original fetch"),global.fetch=g,u=!1)},settings:()=>{const[r,t]=m.React.useState(f()),[n,c]=m.React.useState(S()),o=()=>{B(r),a.showToast("API Key saved!",s.getAssetIDByName("ic_check"))},e=()=>{E(n),a.showToast("Server URL saved!",s.getAssetIDByName("ic_check"))};return m.React.createElement(m.React.Fragment,null,m.React.createElement(d.Forms.FormSection,{title:"Immich Configuration"},m.React.createElement(d.Forms.FormText,{style:{marginBottom:10,marginLeft:10}},"Configure your Immich server connection:"),m.React.createElement(d.Forms.FormInput,{placeholder:"Enter your Immich API Key",value:r,onChange:t,secureTextEntry:!0}),m.React.createElement(d.Forms.FormRow,{label:"Save API Key",onPress:o}),m.React.createElement(d.Forms.FormInput,{placeholder:"Enter Immich Server URL (e.g., https://immich.example.com)",value:n,onChange:c}),m.React.createElement(d.Forms.FormRow,{label:"Save Server URL",onPress:e}),m.React.createElement(d.Forms.FormRow,{label:"Test Connection",onPress:C})),m.React.createElement(d.Forms.FormSection,{title:"Status"},m.React.createElement(d.Forms.FormText,{style:{marginBottom:10,marginLeft:10}},w()?"\u2705 Immich is configured and ready to use!":"\u274C Please configure Immich settings above")))}};return I.default=H,Object.defineProperty(I,"__esModule",{value:!0}),I})({},vendetta.ui.toasts,vendetta.patcher,vendetta.ui.assets,vendetta.metro,vendetta.plugin,vendetta.metro.common,vendetta.ui.components);
