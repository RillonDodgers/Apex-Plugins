(function(h,d,n,a,f,c,l,A){"use strict";const w={apiKey:"",serverUrl:""},m=()=>({...w,...f.storage}),v=t=>{Object.assign(f.storage,t)},_=t=>{const r=m();r.apiKey=t,v(r)},F=t=>{const r=m();r.serverUrl=t,v(r)},y=()=>m().apiKey,I=()=>m().serverUrl,S=()=>{const t=m();return t.apiKey.trim()!==""&&t.serverUrl.trim()!==""};let u=[];const P=()=>{d.findByStoreName("ChannelStore"),d.findByStoreName("MessageStore")},E=(t,r)=>{const i=y(),o=I();return!i||!o?(n.showToast("Immich not configured! Please set API key and server URL in settings.",a.getAssetIDByName("ic_close_16px")),Promise.resolve(!1)):fetch(t).then(e=>{if(!e.ok)throw new Error(`Failed to download image: ${e.status}`);return e.blob()}).then(e=>{const s=new FormData;return s.append("assetData",e,r),s.append("deviceAssetId",`discord_${Date.now()}_${Math.random().toString(36).substr(2,9)}`),s.append("deviceId","vendetta-discord"),s.append("fileCreatedAt",new Date().toISOString()),s.append("fileModifiedAt",new Date().toISOString()),fetch(`${o}/api/asset/upload`,{method:"POST",headers:{"X-API-KEY":i},body:s})}).then(e=>e.ok?!0:e.text().then(s=>{throw new Error(`Upload failed: ${e.status} - ${s}`)})).catch(e=>(console.error("Immich upload error:",e),n.showToast(`Upload failed: ${e.message}`,a.getAssetIDByName("ic_close_16px")),!1))},N=t=>{if(!S()){n.showToast("Please configure Immich settings first!",a.getAssetIDByName("ic_close_16px"));return}const r=t.attachments;if(!r||r.length===0){n.showToast("No images found in this message",a.getAssetIDByName("ic_close_16px"));return}const i=r.filter(g=>g.content_type?.startsWith("image/")||/\.(jpg|jpeg|png|gif|webp|bmp)$/i.test(g.filename));if(i.length===0){n.showToast("No image attachments found",a.getAssetIDByName("ic_close_16px"));return}let o=0,e=0,s=0;const D=g=>E(g.url,g.filename).then(p=>{p?o++:e++,s++,s===i.length&&(o>0&&n.showToast(`Successfully saved ${o} image(s) to Immich!`,a.getAssetIDByName("ic_check")),e>0&&n.showToast(`Failed to save ${e} image(s)`,a.getAssetIDByName("ic_close_16px")))}).catch(p=>{e++,s++,console.error("Error processing attachment:",p),s===i.length&&(o>0&&n.showToast(`Successfully saved ${o} image(s) to Immich!`,a.getAssetIDByName("ic_check")),e>0&&n.showToast(`Failed to save ${e} image(s)`,a.getAssetIDByName("ic_close_16px")))});i.forEach(g=>{D(g)})};var B={onLoad:()=>{P();try{const t=d.findByProps("MessageLongPressActionSheet")?.MessageLongPressActionSheet;if(t){console.log("Found MessageLongPressActionSheet component - patching for media links");const r=A.before("render",t,i=>{try{const[o]=i;console.log("MessageLongPressActionSheet render:",{hasMessage:!!o.message,hasOptions:!!o.options,optionsCount:o.options?.length||0,allProps:Object.keys(o)});const e=o.message;if(!e){console.log("No message found in MessageLongPressActionSheet");return}if(!e.attachments||e.attachments.length===0){console.log("No attachments found in message");return}if(console.log("Message found with attachments:",e.attachments.length),!e.attachments.some(s=>s.content_type?.startsWith("image/")||/\.(jpg|jpeg|png|gif|webp|bmp)$/i.test(s.filename))){console.log("No image attachments found");return}console.log("Found image attachments, adding Save to Immich option"),o.options&&!o.options.some(s=>s?.label==="Save to Immich")&&(o.options.unshift({label:"Save to Immich",icon:a.getAssetIDByName("ic_download"),onPress:()=>{try{console.log("Save to Immich pressed!"),N(e),o.hideActionSheet?.()}catch(s){console.error("Error saving to Immich:",s),n.showToast("Failed to save images to Immich",a.getAssetIDByName("ic_close_16px"))}}}),console.log("Added Save to Immich option to MessageLongPressActionSheet"))}catch(o){console.error("MessageLongPressActionSheet patch error:",o)}});u.push(r)}else console.warn("Could not find MessageLongPressActionSheet component")}catch(t){console.error("Error setting up MessageLongPressActionSheet patch:",t)}},onUnload:()=>{u.forEach(t=>{try{t()}catch(r){console.error("Error unpatching:",r)}}),u=[]},settings:()=>{const[t,r]=c.React.useState(y()),[i,o]=c.React.useState(I()),e=()=>{_(t),n.showToast("API Key saved!",a.getAssetIDByName("ic_check"))},s=()=>{F(i),n.showToast("Server URL saved!",a.getAssetIDByName("ic_check"))};return c.React.createElement(c.React.Fragment,null,c.React.createElement(l.Forms.FormSection,{title:"Immich Configuration"},c.React.createElement(l.Forms.FormText,{style:{marginBottom:10}},"Configure your Immich server connection:"),c.React.createElement(l.Forms.FormInput,{placeholder:"Enter your Immich API Key",value:t,onChange:r,secureTextEntry:!0}),c.React.createElement(l.Forms.FormRow,{label:"Save API Key",onPress:e}),c.React.createElement(l.Forms.FormInput,{placeholder:"Enter Immich Server URL (e.g., https://immich.example.com)",value:i,onChange:o}),c.React.createElement(l.Forms.FormRow,{label:"Save Server URL",onPress:s})),c.React.createElement(l.Forms.FormSection,{title:"Status"},c.React.createElement(l.Forms.FormText,{style:{marginBottom:10}},S()?"\u2705 Immich is configured and ready to use!":"\u274C Please configure Immich settings above")))}};return h.default=B,Object.defineProperty(h,"__esModule",{value:!0}),h})({},vendetta.metro,vendetta.ui.toasts,vendetta.ui.assets,vendetta.plugin,vendetta.metro.common,vendetta.ui.components,vendetta.patcher);
