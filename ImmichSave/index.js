(function(u,n,T,a,v,w,m,h){"use strict";const C={apiKey:"",serverUrl:""},g=()=>({...C,...w.storage}),S=o=>{Object.assign(w.storage,o)},U=o=>{const t=g();t.apiKey=o,S(t)},F=o=>{const t=g();t.serverUrl=o,S(t)},f=()=>g().apiKey,y=()=>g().serverUrl,_=()=>{const o=g();return o.apiKey.trim()!==""&&o.serverUrl.trim()!==""};function $(){return"10000000-1000-4000-8000-100000000000".replace(/[018]/g,o=>(+o^crypto.getRandomValues(new Uint8Array(1))[0]&15>>+o/4).toString(16))}v.findByProps("openLazy","hideActionSheet");const A=v.findByProps("ActionSheet")?.ActionSheet,b=v.findByProps("ActionSheetRow")?.ActionSheetRow;let I;const k=()=>{const o=f(),t=y();if(!o||!t){n.showToast("Immich not configured!",a.getAssetIDByName("ic_close_16px"));return}fetch(`${t}/api/albums`,{method:"GET",headers:{"X-API-KEY":o,Accept:"application/json"}}).then(i=>{i.status===200||i.status===401?n.showToast("\u2705 Immich connection successful!",a.getAssetIDByName("ic_check")):n.showToast(`\u274C Connection failed: ${i.status}`,a.getAssetIDByName("ic_close_16px"))}).catch(i=>{n.showToast(`\u274C Cannot reach server: ${i.message}`,a.getAssetIDByName("ic_close_16px"))})},E=o=>`/tmp/immich_cache_${Date.now()}_${$()}_${o}`,D=async(o,t)=>{const i=await o.arrayBuffer(),c=new Uint8Array(i);typeof window<"u"&&"showSaveFilePicker"in window?(window.__immichCache=window.__immichCache||{},window.__immichCache[t]=c):(globalThis.__immichCache=globalThis.__immichCache||{},globalThis.__immichCache[t]=c)},R=(o,t)=>{const i=(globalThis.__immichCache||(typeof window<"u"?window.__immichCache:{}))[o];if(!i)throw new Error(`Cache file not found: ${o}`);return new Blob([i],{type:t})},P=o=>{try{const t=globalThis.__immichCache||(typeof window<"u"?window.__immichCache:{});t[o]&&(delete t[o],console.log("[ImmichSave] Cleaned up cache file:",o))}catch(t){console.warn("[ImmichSave] Failed to cleanup cache file:",o,t)}},B=(o,t)=>{const i=f(),c=y();if(!i||!c)return n.showToast("Immich not configured! Please set API key and server URL in settings.",a.getAssetIDByName("ic_close_16px")),Promise.resolve(!1);console.log("[ImmichSave] Starting upload for:",t),console.log("[ImmichSave] File URL:",o),console.log("[ImmichSave] Server URL:",c),console.log("[ImmichSave] API Key length:",i.length);const s=E(t);return console.log("[ImmichSave] Cache path:",s),fetch(o,{method:"GET",headers:{"User-Agent":"Mozilla/5.0 (compatible; ImmichSave/1.0)"}}).then(e=>{if(console.log("[ImmichSave] File download response:",e.status,e.statusText),console.log("[ImmichSave] Content-Length:",e.headers.get("content-length")),console.log("[ImmichSave] Content-Type:",e.headers.get("content-type")),!e.ok)throw new Error(`Failed to download file: ${e.status} ${e.statusText}`);const r=e.headers.get("content-length");if(r&&parseInt(r)===0)throw new Error("Server returned empty file (Content-Length: 0)");return e.blob()}).then(async e=>{if(console.log("[ImmichSave] Downloaded blob size:",e.size,"bytes"),console.log("[ImmichSave] Downloaded blob type:",e.type),e.size===0)throw new Error("Downloaded file is empty (0 bytes)");console.log("[ImmichSave] Writing to cache..."),await D(e,s),console.log("[ImmichSave] File cached successfully");const r=R(s,e.type);if(console.log("[ImmichSave] Verified cached file size:",r.size,"bytes"),r.size!==e.size)throw new Error(`Cache verification failed: expected ${e.size} bytes, got ${r.size} bytes`);const l=new FormData;l.append("assetData",r,t);const d=`${t.match(/\d+/g)?.join("")||""}-${r.size}-${Date.now()}`;l.append("deviceAssetId",d),l.append("deviceId","discord-mobile-v2");const p=new Date().toISOString();return l.append("fileCreatedAt",p),l.append("fileModifiedAt",p),l.append("fileSize",String(r.size)),console.log("[ImmichSave] FormData prepared with cached file"),console.log("[ImmichSave] Uploading to:",`${c}/api/assets`),fetch(`${c}/api/assets`,{method:"POST",headers:{"x-api-key":i,Accept:"application/json"},body:l})}).then(e=>(console.log("[ImmichSave] Upload response status:",e.status,e.statusText),console.log("[ImmichSave] Upload response headers:",Object.fromEntries(e.headers.entries())),e.ok?e.text().then(r=>(console.log("[ImmichSave] Upload success response:",r),!0)):e.text().then(r=>{throw console.log("[ImmichSave] Upload error response body:",r),new Error(`Upload failed: ${e.status} - ${r}`)}))).catch(e=>{console.error("[ImmichSave] Upload error:",e),console.error("[ImmichSave] Error message:",e.message),console.error("[ImmichSave] Error type:",e.constructor.name),console.error("[ImmichSave] Error stack:",e.stack);let r="Unknown error occurred";return e.message.includes("Network request failed")?r="Cannot connect to Immich server. Check your server URL and network connection.":e.message.includes("Upload failed: 401")?r="Invalid API key. Please check your Immich API key in settings.":e.message.includes("Upload failed: 403")?r="Access denied. Check your API key permissions.":e.message.includes("Upload failed: 404")?r="Immich API endpoint not found. Check your server URL.":e.message.includes("Upload failed: 500")?r="Immich server error. Check server logs.":r=e.message||"Unknown error occurred",n.showToast(`Failed to save: ${r}`,a.getAssetIDByName("ic_close_16px")),!1}).finally(()=>{P(s)})},x=o=>{if(!_()){n.showToast("Please configure Immich settings first!",a.getAssetIDByName("ic_close_16px"));return}const t=o.attachments;if(!t||t.length===0){n.showToast("No media found in this message",a.getAssetIDByName("ic_close_16px"));return}const i=t.filter(l=>{const d=l.content_type?.startsWith("image/")||/\.(jpg|jpeg|png|gif|webp|bmp|svg)$/i.test(l.filename),p=l.content_type?.startsWith("video/")||/\.(mp4|mov|avi|mkv|webm|m4v|3gp|flv|wmv)$/i.test(l.filename);return d||p});if(i.length===0){n.showToast("No image or video attachments found",a.getAssetIDByName("ic_close_16px"));return}n.showToast(`Uploading ${i.length} file(s) to Immich...`,a.getAssetIDByName("ic_upload"));let c=0,s=0,e=0;const r=l=>B(l.url,l.filename).then(d=>{d?c++:s++,e++,i.length>1&&n.showToast(`Progress: ${e}/${i.length} files processed`,a.getAssetIDByName("ic_check")),e===i.length&&(c>0&&n.showToast(`Successfully saved ${c} file(s) to Immich!`,a.getAssetIDByName("ic_check")),s>0&&n.showToast(`Failed to save ${s} file(s)`,a.getAssetIDByName("ic_close_16px")))}).catch(d=>{s++,e++,e===i.length&&(c>0&&n.showToast(`Successfully saved ${c} file(s) to Immich!`,a.getAssetIDByName("ic_check")),s>0&&n.showToast(`Failed to save ${s} file(s)`,a.getAssetIDByName("ic_close_16px")))});i.forEach(l=>{r(l)})};var N={onLoad:()=>{A&&(I=T.before("render",A,o=>{try{const[t]=o,i=t.header?.props?.message;if(!i||!i.attachments?.some(c=>{const s=c.content_type?.startsWith("image/")||/\.(jpg|jpeg|png|gif|webp|bmp|svg)$/i.test(c.filename),e=c.content_type?.startsWith("video/")||/\.(mp4|mov|avi|mkv|webm|m4v|3gp|flv|wmv)$/i.test(c.filename);return s||e}))return;if(t.children&&Array.isArray(t.children)&&b&&!t.children.some(c=>c?.props?.label==="Save to Immich")){const c=m.React.createElement(b,{key:"save-to-immich",label:"Save to Immich",icon:a.getAssetIDByName("ic_download"),onPress:()=>{try{x(i)}catch(s){console.error("[ImmichSave] Error in Save to Immich handler:",s),n.showToast(`Failed to save: ${s.message||"Unknown error"}`,a.getAssetIDByName("ic_close_16px"))}}});t.children.unshift(c)}}catch(t){console.error("[ImmichSave] ActionSheet patch error:",t)}}))},onUnload:()=>{I&&I()},settings:()=>{const[o,t]=m.React.useState(f()),[i,c]=m.React.useState(y()),s=()=>{U(o),n.showToast("API Key saved!",a.getAssetIDByName("ic_check"))},e=()=>{F(i),n.showToast("Server URL saved!",a.getAssetIDByName("ic_check"))};return m.React.createElement(m.React.Fragment,null,m.React.createElement(h.Forms.FormSection,{title:"Immich Configuration"},m.React.createElement(h.Forms.FormText,{style:{marginBottom:10,marginLeft:10}},"Configure your Immich server connection:"),m.React.createElement(h.Forms.FormInput,{placeholder:"Enter your Immich API Key",value:o,onChange:t,secureTextEntry:!0}),m.React.createElement(h.Forms.FormRow,{label:"Save API Key",onPress:s}),m.React.createElement(h.Forms.FormInput,{placeholder:"Enter Immich Server URL (e.g., https://immich.example.com)",value:i,onChange:c}),m.React.createElement(h.Forms.FormRow,{label:"Save Server URL",onPress:e}),m.React.createElement(h.Forms.FormRow,{label:"Test Connection",onPress:k})),m.React.createElement(h.Forms.FormSection,{title:"Status"},m.React.createElement(h.Forms.FormText,{style:{marginBottom:10,marginLeft:10}},_()?"\u2705 Immich is configured and ready to use!":"\u274C Please configure Immich settings above")))}};return u.default=N,Object.defineProperty(u,"__esModule",{value:!0}),u})({},vendetta.ui.toasts,vendetta.patcher,vendetta.ui.assets,vendetta.metro,vendetta.plugin,vendetta.metro.common,vendetta.ui.components);
