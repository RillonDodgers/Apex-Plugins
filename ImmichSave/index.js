(function(u,n,_,a,h,y,m,d){"use strict";const b={apiKey:"",serverUrl:""},p=()=>({...b,...y.storage}),S=r=>{Object.assign(y.storage,r)},C=r=>{const o=p();o.apiKey=r,S(o)},T=r=>{const o=p();o.serverUrl=r,S(o)},v=()=>p().apiKey,I=()=>p().serverUrl,w=()=>{const r=p();return r.apiKey.trim()!==""&&r.serverUrl.trim()!==""},E=h.findByProps("fetch")||h.findByProps("request")||h.findByProps("http"),U=h.findByProps("checkCSP")||h.findByProps("validateRequest")||h.findByProps("allowedOrigins");console.log("[ImmichSave] CSP Utils found:",!!U),h.findByProps("openLazy","hideActionSheet");const A=h.findByProps("ActionSheet")?.ActionSheet,P=h.findByProps("ActionSheetRow")?.ActionSheetRow;let f;const k=()=>{const r=v(),o=I();if(!r||!o){n.showToast("Immich not configured!",a.getAssetIDByName("ic_close_16px"));return}console.log("[ImmichSave] Testing connection to:",`${o}/api/albums`),console.log("[ImmichSave] Testing catbox domains first..."),["https://catbox.moe/user/api.php","https://litterbox.com/resources/internals/api.php","https://pomf.se/upload.php"].forEach((i,l)=>{fetch(i,{method:"GET"}).then(g=>{console.log(`[ImmichSave] Catbox test ${l+1}: SUCCESS - ${g.status}`)}).catch(g=>{console.log(`[ImmichSave] Catbox test ${l+1}: FAILED - ${g.message}`)})}),console.log("[ImmichSave] Testing our server:",`${o}/api/albums`),console.log("[ImmichSave] Attempting CSP bypass...");const c=`
    fetch('${o}/api/albums', {
      method: 'GET',
      headers: {
        'X-API-KEY': '${r}',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
      }
    }).then(r => r.text()).then(data => {
      window.postMessage({type: 'IMMICH_RESULT', data: data, status: 'success'}, '*');
    }).catch(e => {
      window.postMessage({type: 'IMMICH_RESULT', error: e.message, status: 'error'}, '*');
    });
  `,s=`data:text/html,<script>${encodeURIComponent(c)}<\/script>`,e=i=>{i.data.type==="IMMICH_RESULT"&&(window.removeEventListener("message",e),i.data.status==="success"?(console.log("[ImmichSave] CSP bypass SUCCESS!"),n.showToast("\u2705 CSP bypass worked!",a.getAssetIDByName("ic_check"))):(console.log("[ImmichSave] CSP bypass failed:",i.data.error),t()))};window.addEventListener("message",e);try{const i=document.createElement("iframe");i.style.display="none",i.src=s,document.body.appendChild(i),setTimeout(()=>{document.body.removeChild(i),window.removeEventListener("message",e)},5e3)}catch{console.log("[ImmichSave] Data URL bypass failed, trying normal fetch"),t()}function t(){fetch(`${o}/api/albums`,{method:"GET",headers:{"X-API-KEY":r,"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",Accept:"*/*","Accept-Language":"en-US,en;q=0.9","Cache-Control":"no-cache",Pragma:"no-cache"}}).then(i=>{console.log("[ImmichSave] Connection test response:",i.status,i.statusText),i.ok?n.showToast("\u2705 Immich connection successful!",a.getAssetIDByName("ic_check")):n.showToast(`\u274C Connection failed: ${i.status}`,a.getAssetIDByName("ic_close_16px"))}).catch(i=>{console.error("[ImmichSave] Primary connection test failed:",i),console.log("[ImmichSave] Trying simpler connection test to:",o),fetch(o,{method:"GET",mode:"no-cors"}).then(l=>{console.log("[ImmichSave] Simple test response:",l.type,l.status),n.showToast("\u2705 Server reachable (no-cors mode)",a.getAssetIDByName("ic_check"))}).catch(l=>{console.error("[ImmichSave] All connection tests failed:",l),n.showToast(`\u274C Cannot reach server: ${i.message}`,a.getAssetIDByName("ic_close_16px"))})})}},B=(r,o)=>{const c=v(),s=I();return!c||!s?(n.showToast("Immich not configured! Please set API key and server URL in settings.",a.getAssetIDByName("ic_close_16px")),Promise.resolve(!1)):fetch(r).then(e=>{if(!e.ok)throw new Error(`Failed to download file: ${e.status}`);return e.blob()}).then(e=>{const t=new FormData;return t.append("assetData",e,o),t.append("deviceAssetId",`discord_${Date.now()}_${Math.random().toString(36).substr(2,9)}`),t.append("deviceId","vendetta-discord"),t.append("fileCreatedAt",new Date().toISOString()),t.append("fileModifiedAt",new Date().toISOString()),t.append("filename",o),t.append("metadata",JSON.stringify([])),console.log("[ImmichSave] Uploading to Immich:",`${s}/api/asset/upload`),console.log("[ImmichSave] API Key length:",c.length),console.log("[ImmichSave] FormData prepared with keys:",["assetData","deviceAssetId","deviceId","fileCreatedAt","fileModifiedAt","filename","metadata"]),console.log("[ImmichSave] Blob size:",e.size,"bytes"),console.log("[ImmichSave] Using Discord's native fetch for upload..."),(E?.fetch||fetch)(`${s}/api/asset/upload`,{method:"POST",headers:{"X-API-KEY":c,"User-Agent":"Discord-Mobile/1.0"},body:t})}).then(e=>e.ok?!0:e.text().then(t=>{throw new Error(`Upload failed: ${e.status} - ${t}`)})).catch(e=>{console.error("[ImmichSave] Upload error:",e),console.error("[ImmichSave] Error type:",e.constructor.name),console.error("[ImmichSave] Error stack:",e.stack);let t="Unknown error occurred";return e.message.includes("Network request failed")?t="Cannot connect to Immich server. Check your server URL and network connection.":e.message.includes("Upload failed: 401")?t="Invalid API key. Please check your Immich API key in settings.":e.message.includes("Upload failed: 403")?t="Access denied. Check your API key permissions.":e.message.includes("Upload failed: 404")?t="Immich API endpoint not found. Check your server URL.":e.message.includes("Upload failed: 500")?t="Immich server error. Check server logs.":t=e.message||"Unknown error occurred",n.showToast(`Failed to save: ${t}`,a.getAssetIDByName("ic_close_16px")),!1})},D=r=>{if(!w()){n.showToast("Please configure Immich settings first!",a.getAssetIDByName("ic_close_16px"));return}const o=r.attachments;if(!o||o.length===0){n.showToast("No media found in this message",a.getAssetIDByName("ic_close_16px"));return}const c=o.filter(l=>{const g=l.content_type?.startsWith("image/")||/\.(jpg|jpeg|png|gif|webp|bmp|svg)$/i.test(l.filename),R=l.content_type?.startsWith("video/")||/\.(mp4|mov|avi|mkv|webm|m4v|3gp|flv|wmv)$/i.test(l.filename);return g||R});if(c.length===0){n.showToast("No image or video attachments found",a.getAssetIDByName("ic_close_16px"));return}n.showToast(`Uploading ${c.length} file(s) to Immich...`,a.getAssetIDByName("ic_upload"));let s=0,e=0,t=0;const i=l=>B(l.url,l.filename).then(g=>{g?s++:e++,t++,c.length>1&&n.showToast(`Progress: ${t}/${c.length} files processed`,a.getAssetIDByName("ic_check")),t===c.length&&(s>0&&n.showToast(`Successfully saved ${s} file(s) to Immich!`,a.getAssetIDByName("ic_check")),e>0&&n.showToast(`Failed to save ${e} file(s)`,a.getAssetIDByName("ic_close_16px")))}).catch(g=>{e++,t++,t===c.length&&(s>0&&n.showToast(`Successfully saved ${s} file(s) to Immich!`,a.getAssetIDByName("ic_check")),e>0&&n.showToast(`Failed to save ${e} file(s)`,a.getAssetIDByName("ic_close_16px")))});c.forEach(l=>{i(l)})};var $={onLoad:()=>{A&&(f=_.before("render",A,r=>{try{const[o]=r,c=o.header?.props?.message;if(!c||!c.attachments?.some(s=>{const e=s.content_type?.startsWith("image/")||/\.(jpg|jpeg|png|gif|webp|bmp|svg)$/i.test(s.filename),t=s.content_type?.startsWith("video/")||/\.(mp4|mov|avi|mkv|webm|m4v|3gp|flv|wmv)$/i.test(s.filename);return e||t}))return;if(o.children&&Array.isArray(o.children)&&P&&!o.children.some(s=>s?.props?.label==="Save to Immich")){const s=m.React.createElement(P,{key:"save-to-immich",label:"Save to Immich",icon:a.getAssetIDByName("ic_download"),onPress:()=>{try{D(c)}catch(e){console.error("[ImmichSave] Error in Save to Immich handler:",e),n.showToast(`Failed to save: ${e.message||"Unknown error"}`,a.getAssetIDByName("ic_close_16px"))}}});o.children.unshift(s)}}catch(o){console.error("[ImmichSave] ActionSheet patch error:",o)}}))},onUnload:()=>{f&&f()},settings:()=>{const[r,o]=m.React.useState(v()),[c,s]=m.React.useState(I()),e=()=>{C(r),n.showToast("API Key saved!",a.getAssetIDByName("ic_check"))},t=()=>{T(c),n.showToast("Server URL saved!",a.getAssetIDByName("ic_check"))};return m.React.createElement(m.React.Fragment,null,m.React.createElement(d.Forms.FormSection,{title:"Immich Configuration"},m.React.createElement(d.Forms.FormText,{style:{marginBottom:10,marginLeft:10}},"Configure your Immich server connection:"),m.React.createElement(d.Forms.FormInput,{placeholder:"Enter your Immich API Key",value:r,onChange:o,secureTextEntry:!0}),m.React.createElement(d.Forms.FormRow,{label:"Save API Key",onPress:e}),m.React.createElement(d.Forms.FormInput,{placeholder:"Enter Immich Server URL (e.g., https://immich.example.com)",value:c,onChange:s}),m.React.createElement(d.Forms.FormRow,{label:"Save Server URL",onPress:t}),m.React.createElement(d.Forms.FormRow,{label:"Test Connection",onPress:k})),m.React.createElement(d.Forms.FormSection,{title:"Status"},m.React.createElement(d.Forms.FormText,{style:{marginBottom:10,marginLeft:10}},w()?"\u2705 Immich is configured and ready to use!":"\u274C Please configure Immich settings above")))}};return u.default=$,Object.defineProperty(u,"__esModule",{value:!0}),u})({},vendetta.ui.toasts,vendetta.patcher,vendetta.ui.assets,vendetta.metro,vendetta.plugin,vendetta.metro.common,vendetta.ui.components);
